{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE PatternSynonyms #-}
{-# LANGUAGE ViewPatterns #-}

module Text.Texpr.Bootstrap
  ( peg
  , grammar
  , clean
  , parsePeg
  ) where

import Data.Char (chr)
import Data.List (partition,uncons)
import Data.Map (Map)
import Data.Texpr (Texpr(..),Texprs)
import Text.Location (Position(..),Range(..),FwdRange,toFwd,fromFwd)
import Text.Texpr.Compile (compile)
import Text.Texpr.Define (Peg(..),Rule(..),SatClass(..),CharClass(..))

import qualified Text.Texpr.Tree as Tree

------ Generated Base Grammar  ------

grammar :: (Map String ([String], Tree.Rule), Tree.Rule)
grammar = case compile peg of
  Right g -> g
  Left e -> errorWithoutStackTrace $ "internal Tbnf error: " ++ show e

pattern Fwd :: Range -> FwdRange
pattern Fwd r <- (fromFwd -> r)
  where
  Fwd = toFwd

peg :: Peg
peg = Peg {start = Nothing, rules = [(Fwd (Range {anchor = Pos {nChars = 127, line = 4, col = 3}, position = Pos {nChars = 149, line = 4, col = 25}}),(Fwd (Range {anchor = Pos {nChars = 127, line = 4, col = 3}, position = Pos {nChars = 132, line = 4, col = 8}}),"start",[]),Seq (Fwd (Range {anchor = Pos {nChars = 135, line = 4, col = 11}, position = Pos {nChars = 149, line = 4, col = 25}})) [Rep (Fwd (Range {anchor = Pos {nChars = 135, line = 4, col = 11}, position = Pos {nChars = 147, line = 4, col = 23}})) (Str (Fwd (Range {anchor = Pos {nChars = 136, line = 4, col = 12}, position = Pos {nChars = 138, line = 4, col = 14}})) "",Just (Call (Fwd (Range {anchor = Pos {nChars = 142, line = 4, col = 18}, position = Pos {nChars = 145, line = 4, col = 21}})) "top" [])) (0,Nothing),End (Fwd (Range {anchor = Pos {nChars = 148, line = 4, col = 24}, position = Pos {nChars = 149, line = 4, col = 25}}))]),(Fwd (Range {anchor = Pos {nChars = 1632, line = 35, col = 3}, position = Pos {nChars = 1661, line = 35, col = 32}}),(Fwd (Range {anchor = Pos {nChars = 1632, line = 35, col = 3}, position = Pos {nChars = 1640, line = 35, col = 11}}),"birdFoot",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 1643, line = 35, col = 14}, position = Pos {nChars = 1652, line = 35, col = 23}})) "bird-foot" (Seq (Fwd (Range {anchor = Pos {nChars = 1654, line = 35, col = 25}, position = Pos {nChars = 1661, line = 35, col = 32}})) [Char (Fwd (Range {anchor = Pos {nChars = 1654, line = 35, col = 25}, position = Pos {nChars = 1657, line = 35, col = 28}})) '>',Char (Fwd (Range {anchor = Pos {nChars = 1658, line = 35, col = 29}, position = Pos {nChars = 1661, line = 35, col = 32}})) ' '])),(Fwd (Range {anchor = Pos {nChars = 1664, line = 36, col = 3}, position = Pos {nChars = 1802, line = 39, col = 6}}),(Fwd (Range {anchor = Pos {nChars = 1664, line = 36, col = 3}, position = Pos {nChars = 1672, line = 36, col = 11}}),"doc.line",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 1675, line = 36, col = 14}, position = Pos {nChars = 1678, line = 36, col = 17}})) "doc" (Flat (Fwd (Range {anchor = Pos {nChars = 1684, line = 37, col = 5}, position = Pos {nChars = 1802, line = 39, col = 6}})) (Seq (Fwd (Range {anchor = Pos {nChars = 1686, line = 37, col = 7}, position = Pos {nChars = 1760, line = 38, col = 18}})) [SatNeg (Fwd (Range {anchor = Pos {nChars = 1686, line = 37, col = 7}, position = Pos {nChars = 1696, line = 37, col = 17}})) [SatSet (Fwd (Range {anchor = Pos {nChars = 1689, line = 37, col = 10}, position = Pos {nChars = 1690, line = 37, col = 11}})) ">",SatChar (Fwd (Range {anchor = Pos {nChars = 1690, line = 37, col = 11}, position = Pos {nChars = 1694, line = 37, col = 15}})) '\n'],Rep (Fwd (Range {anchor = Pos {nChars = 1749, line = 38, col = 7}, position = Pos {nChars = 1760, line = 38, col = 18}})) (SatNeg (Fwd (Range {anchor = Pos {nChars = 1749, line = 38, col = 7}, position = Pos {nChars = 1759, line = 38, col = 17}})) [SatChar (Fwd (Range {anchor = Pos {nChars = 1752, line = 38, col = 10}, position = Pos {nChars = 1756, line = 38, col = 14}})) '\n'],Nothing) (0,Nothing)]))),(Fwd (Range {anchor = Pos {nChars = 1807, line = 41, col = 3}, position = Pos {nChars = 1833, line = 41, col = 29}}),(Fwd (Range {anchor = Pos {nChars = 1807, line = 41, col = 3}, position = Pos {nChars = 1810, line = 41, col = 6}}),"Doc",[]),Rep (Fwd (Range {anchor = Pos {nChars = 1813, line = 41, col = 9}, position = Pos {nChars = 1833, line = 41, col = 29}})) (Alt (Fwd (Range {anchor = Pos {nChars = 1814, line = 41, col = 10}, position = Pos {nChars = 1831, line = 41, col = 27}})) [Seq (Fwd (Range {anchor = Pos {nChars = 1814, line = 41, col = 10}, position = Pos {nChars = 1826, line = 41, col = 22}})) [Call (Fwd (Range {anchor = Pos {nChars = 1814, line = 41, col = 10}, position = Pos {nChars = 1822, line = 41, col = 18}})) "doc.line" [],Rep (Fwd (Range {anchor = Pos {nChars = 1823, line = 41, col = 19}, position = Pos {nChars = 1826, line = 41, col = 22}})) (Call (Fwd (Range {anchor = Pos {nChars = 1823, line = 41, col = 19}, position = Pos {nChars = 1825, line = 41, col = 21}})) "nl" [],Nothing) (0,Just 1)],Call (Fwd (Range {anchor = Pos {nChars = 1829, line = 41, col = 25}, position = Pos {nChars = 1831, line = 41, col = 27}})) "nl" []],Nothing) (1,Nothing)),(Fwd (Range {anchor = Pos {nChars = 2293, line = 49, col = 3}, position = Pos {nChars = 2349, line = 52, col = 10}}),(Fwd (Range {anchor = Pos {nChars = 2293, line = 49, col = 3}, position = Pos {nChars = 2296, line = 49, col = 6}}),"top",[]),Alt (Fwd (Range {anchor = Pos {nChars = 2303, line = 50, col = 7}, position = Pos {nChars = 2349, line = 52, col = 10}})) [Call (Fwd (Range {anchor = Pos {nChars = 2303, line = 50, col = 7}, position = Pos {nChars = 2306, line = 50, col = 10}})) "Doc" [],Seq (Fwd (Range {anchor = Pos {nChars = 2313, line = 51, col = 7}, position = Pos {nChars = 2339, line = 51, col = 33}})) [Call (Fwd (Range {anchor = Pos {nChars = 2313, line = 51, col = 7}, position = Pos {nChars = 2321, line = 51, col = 15}})) "birdFoot" [],Call (Fwd (Range {anchor = Pos {nChars = 2322, line = 51, col = 16}, position = Pos {nChars = 2325, line = 51, col = 19}})) "Def" [],Rep (Fwd (Range {anchor = Pos {nChars = 2326, line = 51, col = 20}, position = Pos {nChars = 2330, line = 51, col = 24}})) (Call (Fwd (Range {anchor = Pos {nChars = 2326, line = 51, col = 20}, position = Pos {nChars = 2329, line = 51, col = 23}})) "lws" [],Nothing) (0,Nothing),Alt (Fwd (Range {anchor = Pos {nChars = 2332, line = 51, col = 26}, position = Pos {nChars = 2338, line = 51, col = 32}})) [Call (Fwd (Range {anchor = Pos {nChars = 2332, line = 51, col = 26}, position = Pos {nChars = 2334, line = 51, col = 28}})) "nl" [],End (Fwd (Range {anchor = Pos {nChars = 2337, line = 51, col = 31}, position = Pos {nChars = 2338, line = 51, col = 32}}))]],Call (Fwd (Range {anchor = Pos {nChars = 2346, line = 52, col = 7}, position = Pos {nChars = 2349, line = 52, col = 10}})) "vws" []]),(Fwd (Range {anchor = Pos {nChars = 2354, line = 54, col = 3}, position = Pos {nChars = 2367, line = 54, col = 16}}),(Fwd (Range {anchor = Pos {nChars = 2354, line = 54, col = 3}, position = Pos {nChars = 2356, line = 54, col = 5}}),"nl",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 2359, line = 54, col = 8}, position = Pos {nChars = 2361, line = 54, col = 10}})) "nl" (Char (Fwd (Range {anchor = Pos {nChars = 2363, line = 54, col = 12}, position = Pos {nChars = 2367, line = 54, col = 16}})) '\n')),(Fwd (Range {anchor = Pos {nChars = 2511, line = 59, col = 3}, position = Pos {nChars = 2532, line = 59, col = 24}}),(Fwd (Range {anchor = Pos {nChars = 2511, line = 59, col = 3}, position = Pos {nChars = 2516, line = 59, col = 8}}),"space",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 2519, line = 59, col = 11}, position = Pos {nChars = 2524, line = 59, col = 16}})) "space" (Flat (Fwd (Range {anchor = Pos {nChars = 2526, line = 59, col = 18}, position = Pos {nChars = 2532, line = 59, col = 24}})) (Rep (Fwd (Range {anchor = Pos {nChars = 2527, line = 59, col = 19}, position = Pos {nChars = 2531, line = 59, col = 23}})) (Char (Fwd (Range {anchor = Pos {nChars = 2527, line = 59, col = 19}, position = Pos {nChars = 2530, line = 59, col = 22}})) ' ',Nothing) (1,Nothing)))),(Fwd (Range {anchor = Pos {nChars = 2535, line = 60, col = 3}, position = Pos {nChars = 2568, line = 60, col = 36}}),(Fwd (Range {anchor = Pos {nChars = 2535, line = 60, col = 3}, position = Pos {nChars = 2542, line = 60, col = 10}}),"comment",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 2545, line = 60, col = 13}, position = Pos {nChars = 2552, line = 60, col = 20}})) "comment" (Seq (Fwd (Range {anchor = Pos {nChars = 2554, line = 60, col = 22}, position = Pos {nChars = 2568, line = 60, col = 36}})) [Char (Fwd (Range {anchor = Pos {nChars = 2554, line = 60, col = 22}, position = Pos {nChars = 2557, line = 60, col = 25}})) '#',Flat (Fwd (Range {anchor = Pos {nChars = 2558, line = 60, col = 26}, position = Pos {nChars = 2568, line = 60, col = 36}})) (Rep (Fwd (Range {anchor = Pos {nChars = 2559, line = 60, col = 27}, position = Pos {nChars = 2567, line = 60, col = 35}})) (SatNeg (Fwd (Range {anchor = Pos {nChars = 2559, line = 60, col = 27}, position = Pos {nChars = 2566, line = 60, col = 34}})) [SatChar (Fwd (Range {anchor = Pos {nChars = 2561, line = 60, col = 29}, position = Pos {nChars = 2565, line = 60, col = 33}})) '\n'],Nothing) (0,Nothing))])),(Fwd (Range {anchor = Pos {nChars = 3051, line = 67, col = 3}, position = Pos {nChars = 3090, line = 67, col = 42}}),(Fwd (Range {anchor = Pos {nChars = 3051, line = 67, col = 3}, position = Pos {nChars = 3068, line = 67, col = 20}}),"birdFoot.improper",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 3071, line = 67, col = 23}, position = Pos {nChars = 3080, line = 67, col = 32}})) "bird-foot" (Seq (Fwd (Range {anchor = Pos {nChars = 3082, line = 67, col = 34}, position = Pos {nChars = 3090, line = 67, col = 42}})) [Char (Fwd (Range {anchor = Pos {nChars = 3082, line = 67, col = 34}, position = Pos {nChars = 3085, line = 67, col = 37}})) '>',Char (Fwd (Range {anchor = Pos {nChars = 3086, line = 67, col = 38}, position = Pos {nChars = 3090, line = 67, col = 42}})) '\n'])),(Fwd (Range {anchor = Pos {nChars = 3508, line = 74, col = 3}, position = Pos {nChars = 3578, line = 76, col = 43}}),(Fwd (Range {anchor = Pos {nChars = 3508, line = 74, col = 3}, position = Pos {nChars = 3511, line = 74, col = 6}}),"lws",[]),Alt (Fwd (Range {anchor = Pos {nChars = 3514, line = 74, col = 9}, position = Pos {nChars = 3578, line = 76, col = 43}})) [Call (Fwd (Range {anchor = Pos {nChars = 3514, line = 74, col = 9}, position = Pos {nChars = 3519, line = 74, col = 14}})) "space" [],Call (Fwd (Range {anchor = Pos {nChars = 3528, line = 75, col = 9}, position = Pos {nChars = 3535, line = 75, col = 16}})) "comment" [],Seq (Fwd (Range {anchor = Pos {nChars = 3544, line = 76, col = 9}, position = Pos {nChars = 3578, line = 76, col = 43}})) [Call (Fwd (Range {anchor = Pos {nChars = 3544, line = 76, col = 9}, position = Pos {nChars = 3546, line = 76, col = 11}})) "nl" [],Rep (Fwd (Range {anchor = Pos {nChars = 3547, line = 76, col = 12}, position = Pos {nChars = 3565, line = 76, col = 30}})) (Call (Fwd (Range {anchor = Pos {nChars = 3547, line = 76, col = 12}, position = Pos {nChars = 3564, line = 76, col = 29}})) "birdFoot.improper" [],Nothing) (0,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 3566, line = 76, col = 31}, position = Pos {nChars = 3574, line = 76, col = 39}})) "birdFoot" [],Call (Fwd (Range {anchor = Pos {nChars = 3575, line = 76, col = 40}, position = Pos {nChars = 3578, line = 76, col = 43}})) "lws" []]]),(Fwd (Range {anchor = Pos {nChars = 3681, line = 80, col = 3}, position = Pos {nChars = 3740, line = 81, col = 26}}),(Fwd (Range {anchor = Pos {nChars = 3681, line = 80, col = 3}, position = Pos {nChars = 3684, line = 80, col = 6}}),"vws",[]),Alt (Fwd (Range {anchor = Pos {nChars = 3687, line = 80, col = 9}, position = Pos {nChars = 3740, line = 81, col = 26}})) [Seq (Fwd (Range {anchor = Pos {nChars = 3687, line = 80, col = 9}, position = Pos {nChars = 3714, line = 80, col = 36}})) [Call (Fwd (Range {anchor = Pos {nChars = 3687, line = 80, col = 9}, position = Pos {nChars = 3695, line = 80, col = 17}})) "birdFoot" [],Rep (Fwd (Range {anchor = Pos {nChars = 3696, line = 80, col = 18}, position = Pos {nChars = 3702, line = 80, col = 24}})) (Call (Fwd (Range {anchor = Pos {nChars = 3696, line = 80, col = 18}, position = Pos {nChars = 3701, line = 80, col = 23}})) "space" [],Nothing) (0,Nothing),Rep (Fwd (Range {anchor = Pos {nChars = 3703, line = 80, col = 25}, position = Pos {nChars = 3711, line = 80, col = 33}})) (Call (Fwd (Range {anchor = Pos {nChars = 3703, line = 80, col = 25}, position = Pos {nChars = 3710, line = 80, col = 32}})) "comment" [],Nothing) (0,Just 1),Call (Fwd (Range {anchor = Pos {nChars = 3712, line = 80, col = 34}, position = Pos {nChars = 3714, line = 80, col = 36}})) "nl" []],Call (Fwd (Range {anchor = Pos {nChars = 3723, line = 81, col = 9}, position = Pos {nChars = 3740, line = 81, col = 26}})) "birdFoot.improper" []]),(Fwd (Range {anchor = Pos {nChars = 4719, line = 115, col = 3}, position = Pos {nChars = 4757, line = 115, col = 41}}),(Fwd (Range {anchor = Pos {nChars = 4719, line = 115, col = 3}, position = Pos {nChars = 4722, line = 115, col = 6}}),"Def",[]),Alt (Fwd (Range {anchor = Pos {nChars = 4725, line = 115, col = 9}, position = Pos {nChars = 4757, line = 115, col = 41}})) [Call (Fwd (Range {anchor = Pos {nChars = 4725, line = 115, col = 9}, position = Pos {nChars = 4734, line = 115, col = 18}})) "Def.Start" [],Call (Fwd (Range {anchor = Pos {nChars = 4737, line = 115, col = 21}, position = Pos {nChars = 4746, line = 115, col = 30}})) "Def.Class" [],Call (Fwd (Range {anchor = Pos {nChars = 4749, line = 115, col = 33}, position = Pos {nChars = 4757, line = 115, col = 41}})) "Def.Rule" []]),(Fwd (Range {anchor = Pos {nChars = 4761, line = 117, col = 3}, position = Pos {nChars = 4816, line = 117, col = 58}}),(Fwd (Range {anchor = Pos {nChars = 4761, line = 117, col = 3}, position = Pos {nChars = 4770, line = 117, col = 12}}),"Def.Start",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 4773, line = 117, col = 15}, position = Pos {nChars = 4782, line = 117, col = 24}})) "def-start" (Seq (Fwd (Range {anchor = Pos {nChars = 4784, line = 117, col = 26}, position = Pos {nChars = 4816, line = 117, col = 58}})) [Str (Fwd (Range {anchor = Pos {nChars = 4784, line = 117, col = 26}, position = Pos {nChars = 4792, line = 117, col = 34}})) "@start",Rep (Fwd (Range {anchor = Pos {nChars = 4793, line = 117, col = 35}, position = Pos {nChars = 4797, line = 117, col = 39}})) (Call (Fwd (Range {anchor = Pos {nChars = 4793, line = 117, col = 35}, position = Pos {nChars = 4796, line = 117, col = 38}})) "lws" [],Nothing) (1,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 4798, line = 117, col = 40}, position = Pos {nChars = 4801, line = 117, col = 43}})) '=',Rep (Fwd (Range {anchor = Pos {nChars = 4802, line = 117, col = 44}, position = Pos {nChars = 4806, line = 117, col = 48}})) (Call (Fwd (Range {anchor = Pos {nChars = 4802, line = 117, col = 44}, position = Pos {nChars = 4805, line = 117, col = 47}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 4807, line = 117, col = 49}, position = Pos {nChars = 4816, line = 117, col = 58}})) "Name.rule" []])),(Fwd (Range {anchor = Pos {nChars = 4887, line = 121, col = 3}, position = Pos {nChars = 4950, line = 121, col = 66}}),(Fwd (Range {anchor = Pos {nChars = 4887, line = 121, col = 3}, position = Pos {nChars = 4895, line = 121, col = 11}}),"Def.Rule",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 4898, line = 121, col = 14}, position = Pos {nChars = 4906, line = 121, col = 22}})) "def-rule" (Seq (Fwd (Range {anchor = Pos {nChars = 4908, line = 121, col = 24}, position = Pos {nChars = 4950, line = 121, col = 66}})) [Call (Fwd (Range {anchor = Pos {nChars = 4908, line = 121, col = 24}, position = Pos {nChars = 4920, line = 121, col = 36}})) "Def.Rule.lhs" [],Rep (Fwd (Range {anchor = Pos {nChars = 4921, line = 121, col = 37}, position = Pos {nChars = 4925, line = 121, col = 41}})) (Call (Fwd (Range {anchor = Pos {nChars = 4921, line = 121, col = 37}, position = Pos {nChars = 4924, line = 121, col = 40}})) "lws" [],Nothing) (1,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 4926, line = 121, col = 42}, position = Pos {nChars = 4929, line = 121, col = 45}})) '=',Rep (Fwd (Range {anchor = Pos {nChars = 4930, line = 121, col = 46}, position = Pos {nChars = 4934, line = 121, col = 50}})) (Call (Fwd (Range {anchor = Pos {nChars = 4930, line = 121, col = 46}, position = Pos {nChars = 4933, line = 121, col = 49}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 4935, line = 121, col = 51}, position = Pos {nChars = 4950, line = 121, col = 66}})) "Rule" [Call (Fwd (Range {anchor = Pos {nChars = 4940, line = 121, col = 56}, position = Pos {nChars = 4949, line = 121, col = 65}})) "Rule.Flat" []]])),(Fwd (Range {anchor = Pos {nChars = 4953, line = 122, col = 3}, position = Pos {nChars = 5077, line = 124, col = 27}}),(Fwd (Range {anchor = Pos {nChars = 4953, line = 122, col = 3}, position = Pos {nChars = 4965, line = 122, col = 15}}),"Def.Rule.lhs",[]),Alt (Fwd (Range {anchor = Pos {nChars = 4968, line = 122, col = 18}, position = Pos {nChars = 5077, line = 124, col = 27}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 4968, line = 122, col = 18}, position = Pos {nChars = 4983, line = 122, col = 33}})) "rule-parametric" (Seq (Fwd (Range {anchor = Pos {nChars = 5003, line = 123, col = 19}, position = Pos {nChars = 5050, line = 123, col = 66}})) [Call (Fwd (Range {anchor = Pos {nChars = 5003, line = 123, col = 19}, position = Pos {nChars = 5012, line = 123, col = 28}})) "Name.rule" [],Call (Fwd (Range {anchor = Pos {nChars = 5013, line = 123, col = 29}, position = Pos {nChars = 5050, line = 123, col = 66}})) "enclose.angles" [Call (Fwd (Range {anchor = Pos {nChars = 5028, line = 123, col = 44}, position = Pos {nChars = 5049, line = 123, col = 65}})) "sep.comma" [Call (Fwd (Range {anchor = Pos {nChars = 5038, line = 123, col = 54}, position = Pos {nChars = 5048, line = 123, col = 64}})) "Name.param" []]]]),Call (Fwd (Range {anchor = Pos {nChars = 5068, line = 124, col = 18}, position = Pos {nChars = 5077, line = 124, col = 27}})) "Name.rule" []]),(Fwd (Range {anchor = Pos {nChars = 5081, line = 126, col = 3}, position = Pos {nChars = 5149, line = 126, col = 71}}),(Fwd (Range {anchor = Pos {nChars = 5081, line = 126, col = 3}, position = Pos {nChars = 5090, line = 126, col = 12}}),"Def.Class",[]),Ctor (Fwd (Range {anchor = Pos {nChars = 5093, line = 126, col = 15}, position = Pos {nChars = 5102, line = 126, col = 24}})) "def-class" (Seq (Fwd (Range {anchor = Pos {nChars = 5104, line = 126, col = 26}, position = Pos {nChars = 5149, line = 126, col = 71}})) [Call (Fwd (Range {anchor = Pos {nChars = 5104, line = 126, col = 26}, position = Pos {nChars = 5129, line = 126, col = 51}})) "enclose.colon" [Call (Fwd (Range {anchor = Pos {nChars = 5118, line = 126, col = 40}, position = Pos {nChars = 5128, line = 126, col = 50}})) "Name.class" []],Rep (Fwd (Range {anchor = Pos {nChars = 5130, line = 126, col = 52}, position = Pos {nChars = 5134, line = 126, col = 56}})) (Call (Fwd (Range {anchor = Pos {nChars = 5130, line = 126, col = 52}, position = Pos {nChars = 5133, line = 126, col = 55}})) "lws" [],Nothing) (1,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 5135, line = 126, col = 57}, position = Pos {nChars = 5138, line = 126, col = 60}})) '=',Rep (Fwd (Range {anchor = Pos {nChars = 5139, line = 126, col = 61}, position = Pos {nChars = 5143, line = 126, col = 65}})) (Call (Fwd (Range {anchor = Pos {nChars = 5139, line = 126, col = 61}, position = Pos {nChars = 5142, line = 126, col = 64}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 5144, line = 126, col = 66}, position = Pos {nChars = 5149, line = 126, col = 71}})) "Class" []])),(Fwd (Range {anchor = Pos {nChars = 5172, line = 130, col = 3}, position = Pos {nChars = 5260, line = 132, col = 19}}),(Fwd (Range {anchor = Pos {nChars = 5172, line = 130, col = 3}, position = Pos {nChars = 5179, line = 130, col = 10}}),"Rule",["f"]),Alt (Fwd (Range {anchor = Pos {nChars = 5186, line = 131, col = 7}, position = Pos {nChars = 5260, line = 132, col = 19}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 5186, line = 131, col = 7}, position = Pos {nChars = 5194, line = 131, col = 15}})) "rule-alt" (Seq (Fwd (Range {anchor = Pos {nChars = 5196, line = 131, col = 17}, position = Pos {nChars = 5241, line = 131, col = 62}})) [Call (Fwd (Range {anchor = Pos {nChars = 5196, line = 131, col = 17}, position = Pos {nChars = 5208, line = 131, col = 29}})) "Rule.Term" [Call (Fwd (Range {anchor = Pos {nChars = 5206, line = 131, col = 27}, position = Pos {nChars = 5207, line = 131, col = 28}})) "f" []],Rep (Fwd (Range {anchor = Pos {nChars = 5209, line = 131, col = 30}, position = Pos {nChars = 5241, line = 131, col = 62}})) (Seq (Fwd (Range {anchor = Pos {nChars = 5210, line = 131, col = 31}, position = Pos {nChars = 5218, line = 131, col = 39}})) [Rep (Fwd (Range {anchor = Pos {nChars = 5210, line = 131, col = 31}, position = Pos {nChars = 5214, line = 131, col = 35}})) (Call (Fwd (Range {anchor = Pos {nChars = 5210, line = 131, col = 31}, position = Pos {nChars = 5213, line = 131, col = 34}})) "lws" [],Nothing) (1,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 5215, line = 131, col = 36}, position = Pos {nChars = 5218, line = 131, col = 39}})) '|'],Just (Seq (Fwd (Range {anchor = Pos {nChars = 5222, line = 131, col = 43}, position = Pos {nChars = 5239, line = 131, col = 60}})) [Rep (Fwd (Range {anchor = Pos {nChars = 5222, line = 131, col = 43}, position = Pos {nChars = 5226, line = 131, col = 47}})) (Call (Fwd (Range {anchor = Pos {nChars = 5222, line = 131, col = 43}, position = Pos {nChars = 5225, line = 131, col = 46}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 5227, line = 131, col = 48}, position = Pos {nChars = 5239, line = 131, col = 60}})) "Rule.Term" [Call (Fwd (Range {anchor = Pos {nChars = 5237, line = 131, col = 58}, position = Pos {nChars = 5238, line = 131, col = 59}})) "f" []]])) (1,Nothing)]),Call (Fwd (Range {anchor = Pos {nChars = 5248, line = 132, col = 7}, position = Pos {nChars = 5260, line = 132, col = 19}})) "Rule.Term" [Call (Fwd (Range {anchor = Pos {nChars = 5258, line = 132, col = 17}, position = Pos {nChars = 5259, line = 132, col = 18}})) "f" []]]),(Fwd (Range {anchor = Pos {nChars = 5263, line = 133, col = 3}, position = Pos {nChars = 5338, line = 135, col = 18}}),(Fwd (Range {anchor = Pos {nChars = 5263, line = 133, col = 3}, position = Pos {nChars = 5275, line = 133, col = 15}}),"Rule.Term",["f"]),Alt (Fwd (Range {anchor = Pos {nChars = 5282, line = 134, col = 7}, position = Pos {nChars = 5338, line = 135, col = 18}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 5282, line = 134, col = 7}, position = Pos {nChars = 5291, line = 134, col = 16}})) "rule-ctor" (Seq (Fwd (Range {anchor = Pos {nChars = 5293, line = 134, col = 18}, position = Pos {nChars = 5320, line = 134, col = 45}})) [Call (Fwd (Range {anchor = Pos {nChars = 5293, line = 134, col = 18}, position = Pos {nChars = 5302, line = 134, col = 27}})) "Name.ctor" [],Call (Fwd (Range {anchor = Pos {nChars = 5303, line = 134, col = 28}, position = Pos {nChars = 5308, line = 134, col = 33}})) "colon" [],Call (Fwd (Range {anchor = Pos {nChars = 5309, line = 134, col = 34}, position = Pos {nChars = 5320, line = 134, col = 45}})) "Rule.Seq" [Call (Fwd (Range {anchor = Pos {nChars = 5318, line = 134, col = 43}, position = Pos {nChars = 5319, line = 134, col = 44}})) "f" []]]),Call (Fwd (Range {anchor = Pos {nChars = 5327, line = 135, col = 7}, position = Pos {nChars = 5338, line = 135, col = 18}})) "Rule.Seq" [Call (Fwd (Range {anchor = Pos {nChars = 5336, line = 135, col = 16}, position = Pos {nChars = 5337, line = 135, col = 17}})) "f" []]]),(Fwd (Range {anchor = Pos {nChars = 5341, line = 136, col = 3}, position = Pos {nChars = 5430, line = 138, col = 21}}),(Fwd (Range {anchor = Pos {nChars = 5341, line = 136, col = 3}, position = Pos {nChars = 5352, line = 136, col = 14}}),"Rule.Seq",["f"]),Alt (Fwd (Range {anchor = Pos {nChars = 5359, line = 137, col = 7}, position = Pos {nChars = 5430, line = 138, col = 21}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 5359, line = 137, col = 7}, position = Pos {nChars = 5367, line = 137, col = 15}})) "rule-seq" (Seq (Fwd (Range {anchor = Pos {nChars = 5369, line = 137, col = 17}, position = Pos {nChars = 5409, line = 137, col = 57}})) [Call (Fwd (Range {anchor = Pos {nChars = 5369, line = 137, col = 17}, position = Pos {nChars = 5383, line = 137, col = 31}})) "Rule.Factor" [Call (Fwd (Range {anchor = Pos {nChars = 5381, line = 137, col = 29}, position = Pos {nChars = 5382, line = 137, col = 30}})) "f" []],Rep (Fwd (Range {anchor = Pos {nChars = 5384, line = 137, col = 32}, position = Pos {nChars = 5409, line = 137, col = 57}})) (Rep (Fwd (Range {anchor = Pos {nChars = 5385, line = 137, col = 33}, position = Pos {nChars = 5389, line = 137, col = 37}})) (Call (Fwd (Range {anchor = Pos {nChars = 5385, line = 137, col = 33}, position = Pos {nChars = 5388, line = 137, col = 36}})) "lws" [],Nothing) (1,Nothing),Just (Call (Fwd (Range {anchor = Pos {nChars = 5393, line = 137, col = 41}, position = Pos {nChars = 5407, line = 137, col = 55}})) "Rule.Factor" [Call (Fwd (Range {anchor = Pos {nChars = 5405, line = 137, col = 53}, position = Pos {nChars = 5406, line = 137, col = 54}})) "f" []])) (1,Nothing)]),Call (Fwd (Range {anchor = Pos {nChars = 5416, line = 138, col = 7}, position = Pos {nChars = 5430, line = 138, col = 21}})) "Rule.Factor" [Call (Fwd (Range {anchor = Pos {nChars = 5428, line = 138, col = 19}, position = Pos {nChars = 5429, line = 138, col = 20}})) "f" []]]),(Fwd (Range {anchor = Pos {nChars = 5433, line = 139, col = 3}, position = Pos {nChars = 5517, line = 141, col = 19}}),(Fwd (Range {anchor = Pos {nChars = 5433, line = 139, col = 3}, position = Pos {nChars = 5447, line = 139, col = 17}}),"Rule.Factor",["f"]),Alt (Fwd (Range {anchor = Pos {nChars = 5454, line = 140, col = 7}, position = Pos {nChars = 5517, line = 141, col = 19}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 5454, line = 140, col = 7}, position = Pos {nChars = 5462, line = 140, col = 15}})) "rule-rep" (Seq (Fwd (Range {anchor = Pos {nChars = 5464, line = 140, col = 17}, position = Pos {nChars = 5498, line = 140, col = 51}})) [Call (Fwd (Range {anchor = Pos {nChars = 5464, line = 140, col = 17}, position = Pos {nChars = 5482, line = 140, col = 35}})) "Rule.Rep.commit" [Call (Fwd (Range {anchor = Pos {nChars = 5480, line = 140, col = 33}, position = Pos {nChars = 5481, line = 140, col = 34}})) "f" []],Call (Fwd (Range {anchor = Pos {nChars = 5483, line = 140, col = 36}, position = Pos {nChars = 5498, line = 140, col = 51}})) "Rule.Rep.amount" []]),Call (Fwd (Range {anchor = Pos {nChars = 5505, line = 141, col = 7}, position = Pos {nChars = 5517, line = 141, col = 19}})) "Rule.Base" [Call (Fwd (Range {anchor = Pos {nChars = 5515, line = 141, col = 17}, position = Pos {nChars = 5516, line = 141, col = 18}})) "f" []]]),(Fwd (Range {anchor = Pos {nChars = 5520, line = 142, col = 3}, position = Pos {nChars = 5647, line = 145, col = 42}}),(Fwd (Range {anchor = Pos {nChars = 5520, line = 142, col = 3}, position = Pos {nChars = 5535, line = 142, col = 18}}),"Rule.Rep.amount",[]),Alt (Fwd (Range {anchor = Pos {nChars = 5542, line = 143, col = 7}, position = Pos {nChars = 5647, line = 145, col = 42}})) [Sat (Fwd (Range {anchor = Pos {nChars = 5542, line = 143, col = 7}, position = Pos {nChars = 5547, line = 143, col = 12}})) [SatSet (Fwd (Range {anchor = Pos {nChars = 5543, line = 143, col = 8}, position = Pos {nChars = 5546, line = 143, col = 11}})) "*+?"],Ctor (Fwd (Range {anchor = Pos {nChars = 5554, line = 144, col = 7}, position = Pos {nChars = 5564, line = 144, col = 17}})) "rep-custom" (Call (Fwd (Range {anchor = Pos {nChars = 5566, line = 144, col = 19}, position = Pos {nChars = 5605, line = 144, col = 58}})) "enclose.braces" [Seq (Fwd (Range {anchor = Pos {nChars = 5581, line = 144, col = 34}, position = Pos {nChars = 5604, line = 144, col = 57}})) [Rep (Fwd (Range {anchor = Pos {nChars = 5581, line = 144, col = 34}, position = Pos {nChars = 5589, line = 144, col = 42}})) (Call (Fwd (Range {anchor = Pos {nChars = 5581, line = 144, col = 34}, position = Pos {nChars = 5588, line = 144, col = 41}})) "num.nat" [],Nothing) (0,Just 1),Call (Fwd (Range {anchor = Pos {nChars = 5590, line = 144, col = 43}, position = Pos {nChars = 5595, line = 144, col = 48}})) "comma" [],Rep (Fwd (Range {anchor = Pos {nChars = 5596, line = 144, col = 49}, position = Pos {nChars = 5604, line = 144, col = 57}})) (Call (Fwd (Range {anchor = Pos {nChars = 5596, line = 144, col = 49}, position = Pos {nChars = 5603, line = 144, col = 56}})) "num.nat" [],Nothing) (0,Just 1)]]),Ctor (Fwd (Range {anchor = Pos {nChars = 5612, line = 145, col = 7}, position = Pos {nChars = 5622, line = 145, col = 17}})) "rep-custom" (Call (Fwd (Range {anchor = Pos {nChars = 5624, line = 145, col = 19}, position = Pos {nChars = 5647, line = 145, col = 42}})) "enclose.braces" [Call (Fwd (Range {anchor = Pos {nChars = 5639, line = 145, col = 34}, position = Pos {nChars = 5646, line = 145, col = 41}})) "num.nat" []])]),(Fwd (Range {anchor = Pos {nChars = 5650, line = 146, col = 3}, position = Pos {nChars = 5775, line = 148, col = 19}}),(Fwd (Range {anchor = Pos {nChars = 5650, line = 146, col = 3}, position = Pos {nChars = 5668, line = 146, col = 21}}),"Rule.Rep.commit",["f"]),Alt (Fwd (Range {anchor = Pos {nChars = 5675, line = 147, col = 7}, position = Pos {nChars = 5775, line = 148, col = 19}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 5675, line = 147, col = 7}, position = Pos {nChars = 5686, line = 147, col = 18}})) "rule-commit" (Call (Fwd (Range {anchor = Pos {nChars = 5688, line = 147, col = 20}, position = Pos {nChars = 5756, line = 147, col = 88}})) "enclose.parens" [Seq (Fwd (Range {anchor = Pos {nChars = 5703, line = 147, col = 35}, position = Pos {nChars = 5755, line = 147, col = 87}})) [Call (Fwd (Range {anchor = Pos {nChars = 5703, line = 147, col = 35}, position = Pos {nChars = 5721, line = 147, col = 53}})) "Rule.Seq.allowFlat" [],Rep (Fwd (Range {anchor = Pos {nChars = 5722, line = 147, col = 54}, position = Pos {nChars = 5726, line = 147, col = 58}})) (Call (Fwd (Range {anchor = Pos {nChars = 5722, line = 147, col = 54}, position = Pos {nChars = 5725, line = 147, col = 57}})) "lws" [],Nothing) (1,Nothing),Str (Fwd (Range {anchor = Pos {nChars = 5727, line = 147, col = 59}, position = Pos {nChars = 5731, line = 147, col = 63}})) "->",Rep (Fwd (Range {anchor = Pos {nChars = 5732, line = 147, col = 64}, position = Pos {nChars = 5736, line = 147, col = 68}})) (Call (Fwd (Range {anchor = Pos {nChars = 5732, line = 147, col = 64}, position = Pos {nChars = 5735, line = 147, col = 67}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 5737, line = 147, col = 69}, position = Pos {nChars = 5755, line = 147, col = 87}})) "Rule.Seq.allowFlat" []]]),Call (Fwd (Range {anchor = Pos {nChars = 5763, line = 148, col = 7}, position = Pos {nChars = 5775, line = 148, col = 19}})) "Rule.Base" [Call (Fwd (Range {anchor = Pos {nChars = 5773, line = 148, col = 17}, position = Pos {nChars = 5774, line = 148, col = 18}})) "f" []]]),(Fwd (Range {anchor = Pos {nChars = 5778, line = 149, col = 3}, position = Pos {nChars = 5874, line = 152, col = 16}}),(Fwd (Range {anchor = Pos {nChars = 5778, line = 149, col = 3}, position = Pos {nChars = 5790, line = 149, col = 15}}),"Rule.Base",["f"]),Alt (Fwd (Range {anchor = Pos {nChars = 5797, line = 150, col = 7}, position = Pos {nChars = 5874, line = 152, col = 16}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 5797, line = 150, col = 7}, position = Pos {nChars = 5807, line = 150, col = 17}})) "rule-group" (Call (Fwd (Range {anchor = Pos {nChars = 5809, line = 150, col = 19}, position = Pos {nChars = 5839, line = 150, col = 49}})) "enclose.parens" [Call (Fwd (Range {anchor = Pos {nChars = 5824, line = 150, col = 34}, position = Pos {nChars = 5838, line = 150, col = 48}})) "Rule.allowFlat" []]),Ctor (Fwd (Range {anchor = Pos {nChars = 5846, line = 151, col = 7}, position = Pos {nChars = 5855, line = 151, col = 16}})) "rule-flat" (Call (Fwd (Range {anchor = Pos {nChars = 5857, line = 151, col = 18}, position = Pos {nChars = 5858, line = 151, col = 19}})) "f" []),Call (Fwd (Range {anchor = Pos {nChars = 5865, line = 152, col = 7}, position = Pos {nChars = 5874, line = 152, col = 16}})) "Rule.prim" []]),(Fwd (Range {anchor = Pos {nChars = 5877, line = 153, col = 3}, position = Pos {nChars = 5925, line = 153, col = 51}}),(Fwd (Range {anchor = Pos {nChars = 5877, line = 153, col = 3}, position = Pos {nChars = 5886, line = 153, col = 12}}),"Rule.Flat",[]),Call (Fwd (Range {anchor = Pos {nChars = 5889, line = 153, col = 15}, position = Pos {nChars = 5925, line = 153, col = 51}})) "enclose" [Char (Fwd (Range {anchor = Pos {nChars = 5897, line = 153, col = 23}, position = Pos {nChars = 5900, line = 153, col = 26}})) '/',Call (Fwd (Range {anchor = Pos {nChars = 5902, line = 153, col = 28}, position = Pos {nChars = 5919, line = 153, col = 45}})) "Rule.disallowFlat" [],Char (Fwd (Range {anchor = Pos {nChars = 5921, line = 153, col = 47}, position = Pos {nChars = 5924, line = 153, col = 50}})) '/']),(Fwd (Range {anchor = Pos {nChars = 5929, line = 155, col = 3}, position = Pos {nChars = 5961, line = 155, col = 35}}),(Fwd (Range {anchor = Pos {nChars = 5929, line = 155, col = 3}, position = Pos {nChars = 5943, line = 155, col = 17}}),"Rule.allowFlat",[]),Call (Fwd (Range {anchor = Pos {nChars = 5946, line = 155, col = 20}, position = Pos {nChars = 5961, line = 155, col = 35}})) "Rule" [Call (Fwd (Range {anchor = Pos {nChars = 5951, line = 155, col = 25}, position = Pos {nChars = 5960, line = 155, col = 34}})) "Rule.Flat" []]),(Fwd (Range {anchor = Pos {nChars = 5964, line = 156, col = 3}, position = Pos {nChars = 6004, line = 156, col = 43}}),(Fwd (Range {anchor = Pos {nChars = 5964, line = 156, col = 3}, position = Pos {nChars = 5982, line = 156, col = 21}}),"Rule.Seq.allowFlat",[]),Call (Fwd (Range {anchor = Pos {nChars = 5985, line = 156, col = 24}, position = Pos {nChars = 6004, line = 156, col = 43}})) "Rule.Seq" [Call (Fwd (Range {anchor = Pos {nChars = 5994, line = 156, col = 33}, position = Pos {nChars = 6003, line = 156, col = 42}})) "Rule.Flat" []]),(Fwd (Range {anchor = Pos {nChars = 6007, line = 157, col = 3}, position = Pos {nChars = 6034, line = 157, col = 30}}),(Fwd (Range {anchor = Pos {nChars = 6007, line = 157, col = 3}, position = Pos {nChars = 6024, line = 157, col = 20}}),"Rule.disallowFlat",[]),Call (Fwd (Range {anchor = Pos {nChars = 6027, line = 157, col = 23}, position = Pos {nChars = 6034, line = 157, col = 30}})) "Rule" [End (Fwd (Range {anchor = Pos {nChars = 6032, line = 157, col = 28}, position = Pos {nChars = 6033, line = 157, col = 29}}))]),(Fwd (Range {anchor = Pos {nChars = 6095, line = 161, col = 3}, position = Pos {nChars = 6376, line = 167, col = 55}}),(Fwd (Range {anchor = Pos {nChars = 6095, line = 161, col = 3}, position = Pos {nChars = 6104, line = 161, col = 12}}),"Rule.prim",[]),Alt (Fwd (Range {anchor = Pos {nChars = 6111, line = 162, col = 7}, position = Pos {nChars = 6376, line = 167, col = 55}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 6111, line = 162, col = 7}, position = Pos {nChars = 6120, line = 162, col = 16}})) "rule-call" (Seq (Fwd (Range {anchor = Pos {nChars = 6122, line = 162, col = 18}, position = Pos {nChars = 6175, line = 162, col = 71}})) [Call (Fwd (Range {anchor = Pos {nChars = 6122, line = 162, col = 18}, position = Pos {nChars = 6131, line = 162, col = 27}})) "Name.rule" [],Rep (Fwd (Range {anchor = Pos {nChars = 6132, line = 162, col = 28}, position = Pos {nChars = 6175, line = 162, col = 71}})) (Call (Fwd (Range {anchor = Pos {nChars = 6132, line = 162, col = 28}, position = Pos {nChars = 6174, line = 162, col = 70}})) "enclose.angles" [Call (Fwd (Range {anchor = Pos {nChars = 6147, line = 162, col = 43}, position = Pos {nChars = 6173, line = 162, col = 69}})) "sep.comma" [Call (Fwd (Range {anchor = Pos {nChars = 6157, line = 162, col = 53}, position = Pos {nChars = 6172, line = 162, col = 68}})) "Rule" [Call (Fwd (Range {anchor = Pos {nChars = 6162, line = 162, col = 58}, position = Pos {nChars = 6171, line = 162, col = 67}})) "Rule.Flat" []]]],Nothing) (0,Just 1)]),Ctor (Fwd (Range {anchor = Pos {nChars = 6182, line = 163, col = 7}, position = Pos {nChars = 6191, line = 163, col = 16}})) "rule-char" (Seq (Fwd (Range {anchor = Pos {nChars = 6193, line = 163, col = 18}, position = Pos {nChars = 6210, line = 163, col = 35}})) [Char (Fwd (Range {anchor = Pos {nChars = 6193, line = 163, col = 18}, position = Pos {nChars = 6197, line = 163, col = 22}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6198, line = 163, col = 23}, position = Pos {nChars = 6205, line = 163, col = 30}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6206, line = 163, col = 31}, position = Pos {nChars = 6210, line = 163, col = 35}})) '\'']),Ctor (Fwd (Range {anchor = Pos {nChars = 6217, line = 164, col = 7}, position = Pos {nChars = 6228, line = 164, col = 18}})) "rule-string" (Seq (Fwd (Range {anchor = Pos {nChars = 6230, line = 164, col = 20}, position = Pos {nChars = 6249, line = 164, col = 39}})) [Char (Fwd (Range {anchor = Pos {nChars = 6230, line = 164, col = 20}, position = Pos {nChars = 6234, line = 164, col = 24}})) '"',Rep (Fwd (Range {anchor = Pos {nChars = 6235, line = 164, col = 25}, position = Pos {nChars = 6244, line = 164, col = 34}})) (Call (Fwd (Range {anchor = Pos {nChars = 6235, line = 164, col = 25}, position = Pos {nChars = 6243, line = 164, col = 33}})) "chars.dq" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 6245, line = 164, col = 35}, position = Pos {nChars = 6249, line = 164, col = 39}})) '"']),Ctor (Fwd (Range {anchor = Pos {nChars = 6256, line = 165, col = 7}, position = Pos {nChars = 6264, line = 165, col = 15}})) "rule-sat" (Seq (Fwd (Range {anchor = Pos {nChars = 6266, line = 165, col = 17}, position = Pos {nChars = 6301, line = 165, col = 52}})) [Alt (Fwd (Range {anchor = Pos {nChars = 6267, line = 165, col = 18}, position = Pos {nChars = 6277, line = 165, col = 28}})) [Str (Fwd (Range {anchor = Pos {nChars = 6267, line = 165, col = 18}, position = Pos {nChars = 6271, line = 165, col = 22}})) "[^",Char (Fwd (Range {anchor = Pos {nChars = 6274, line = 165, col = 25}, position = Pos {nChars = 6277, line = 165, col = 28}})) '['],Rep (Fwd (Range {anchor = Pos {nChars = 6279, line = 165, col = 30}, position = Pos {nChars = 6297, line = 165, col = 48}})) (Call (Fwd (Range {anchor = Pos {nChars = 6279, line = 165, col = 30}, position = Pos {nChars = 6296, line = 165, col = 47}})) "Rule.satisfy.part" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 6298, line = 165, col = 49}, position = Pos {nChars = 6301, line = 165, col = 52}})) ']']),Ctor (Fwd (Range {anchor = Pos {nChars = 6308, line = 166, col = 7}, position = Pos {nChars = 6316, line = 166, col = 15}})) "rule-end" (Char (Fwd (Range {anchor = Pos {nChars = 6318, line = 166, col = 17}, position = Pos {nChars = 6321, line = 166, col = 20}})) '$'),Ctor (Fwd (Range {anchor = Pos {nChars = 6328, line = 167, col = 7}, position = Pos {nChars = 6337, line = 167, col = 16}})) "rule-void" (Seq (Fwd (Range {anchor = Pos {nChars = 6339, line = 167, col = 18}, position = Pos {nChars = 6376, line = 167, col = 55}})) [Char (Fwd (Range {anchor = Pos {nChars = 6339, line = 167, col = 18}, position = Pos {nChars = 6342, line = 167, col = 21}})) '0',Rep (Fwd (Range {anchor = Pos {nChars = 6343, line = 167, col = 22}, position = Pos {nChars = 6347, line = 167, col = 26}})) (Call (Fwd (Range {anchor = Pos {nChars = 6343, line = 167, col = 22}, position = Pos {nChars = 6346, line = 167, col = 25}})) "lws" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 6348, line = 167, col = 27}, position = Pos {nChars = 6351, line = 167, col = 30}})) ':',Rep (Fwd (Range {anchor = Pos {nChars = 6352, line = 167, col = 31}, position = Pos {nChars = 6356, line = 167, col = 35}})) (Call (Fwd (Range {anchor = Pos {nChars = 6352, line = 167, col = 31}, position = Pos {nChars = 6355, line = 167, col = 34}})) "lws" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 6357, line = 167, col = 36}, position = Pos {nChars = 6361, line = 167, col = 40}})) '"',Rep (Fwd (Range {anchor = Pos {nChars = 6362, line = 167, col = 41}, position = Pos {nChars = 6371, line = 167, col = 50}})) (Call (Fwd (Range {anchor = Pos {nChars = 6362, line = 167, col = 41}, position = Pos {nChars = 6370, line = 167, col = 49}})) "chars.dq" [],Nothing) (1,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 6372, line = 167, col = 51}, position = Pos {nChars = 6376, line = 167, col = 55}})) '"'])]),(Fwd (Range {anchor = Pos {nChars = 6380, line = 169, col = 3}, position = Pos {nChars = 6566, line = 174, col = 10}}),(Fwd (Range {anchor = Pos {nChars = 6380, line = 169, col = 3}, position = Pos {nChars = 6397, line = 169, col = 20}}),"Rule.satisfy.part",[]),Alt (Fwd (Range {anchor = Pos {nChars = 6404, line = 170, col = 7}, position = Pos {nChars = 6566, line = 174, col = 10}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 6404, line = 170, col = 7}, position = Pos {nChars = 6413, line = 170, col = 16}})) "sat-range" (Seq (Fwd (Range {anchor = Pos {nChars = 6415, line = 170, col = 18}, position = Pos {nChars = 6455, line = 170, col = 58}})) [Char (Fwd (Range {anchor = Pos {nChars = 6415, line = 170, col = 18}, position = Pos {nChars = 6419, line = 170, col = 22}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6420, line = 170, col = 23}, position = Pos {nChars = 6427, line = 170, col = 30}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6428, line = 170, col = 31}, position = Pos {nChars = 6432, line = 170, col = 35}})) '\'',Str (Fwd (Range {anchor = Pos {nChars = 6433, line = 170, col = 36}, position = Pos {nChars = 6437, line = 170, col = 40}})) "..",Char (Fwd (Range {anchor = Pos {nChars = 6438, line = 170, col = 41}, position = Pos {nChars = 6442, line = 170, col = 45}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6443, line = 170, col = 46}, position = Pos {nChars = 6450, line = 170, col = 53}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6451, line = 170, col = 54}, position = Pos {nChars = 6455, line = 170, col = 58}})) '\'']),Ctor (Fwd (Range {anchor = Pos {nChars = 6462, line = 171, col = 7}, position = Pos {nChars = 6470, line = 171, col = 15}})) "sat-char" (Seq (Fwd (Range {anchor = Pos {nChars = 6472, line = 171, col = 17}, position = Pos {nChars = 6489, line = 171, col = 34}})) [Char (Fwd (Range {anchor = Pos {nChars = 6472, line = 171, col = 17}, position = Pos {nChars = 6476, line = 171, col = 21}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6477, line = 171, col = 22}, position = Pos {nChars = 6484, line = 171, col = 29}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6485, line = 171, col = 30}, position = Pos {nChars = 6489, line = 171, col = 34}})) '\'']),Ctor (Fwd (Range {anchor = Pos {nChars = 6496, line = 172, col = 7}, position = Pos {nChars = 6503, line = 172, col = 14}})) "sat-var" (Call (Fwd (Range {anchor = Pos {nChars = 6505, line = 172, col = 16}, position = Pos {nChars = 6530, line = 172, col = 41}})) "enclose.colon" [Call (Fwd (Range {anchor = Pos {nChars = 6519, line = 172, col = 30}, position = Pos {nChars = 6529, line = 172, col = 40}})) "Name.class" []]),Flat (Fwd (Range {anchor = Pos {nChars = 6537, line = 173, col = 7}, position = Pos {nChars = 6556, line = 173, col = 26}})) (Rep (Fwd (Range {anchor = Pos {nChars = 6539, line = 173, col = 9}, position = Pos {nChars = 6554, line = 173, col = 24}})) (Sat (Fwd (Range {anchor = Pos {nChars = 6539, line = 173, col = 9}, position = Pos {nChars = 6553, line = 173, col = 23}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 6540, line = 173, col = 10}, position = Pos {nChars = 6552, line = 173, col = 22}})) "char.brack"],Nothing) (1,Nothing)),Call (Fwd (Range {anchor = Pos {nChars = 6563, line = 174, col = 7}, position = Pos {nChars = 6566, line = 174, col = 10}})) "lws" []]),(Fwd (Range {anchor = Pos {nChars = 6582, line = 178, col = 3}, position = Pos {nChars = 6642, line = 178, col = 63}}),(Fwd (Range {anchor = Pos {nChars = 6582, line = 178, col = 3}, position = Pos {nChars = 6587, line = 178, col = 8}}),"Class",[]),Seq (Fwd (Range {anchor = Pos {nChars = 6590, line = 178, col = 11}, position = Pos {nChars = 6642, line = 178, col = 63}})) [Call (Fwd (Range {anchor = Pos {nChars = 6590, line = 178, col = 11}, position = Pos {nChars = 6600, line = 178, col = 21}})) "Class.term" [],Rep (Fwd (Range {anchor = Pos {nChars = 6601, line = 178, col = 22}, position = Pos {nChars = 6642, line = 178, col = 63}})) (Seq (Fwd (Range {anchor = Pos {nChars = 6602, line = 178, col = 23}, position = Pos {nChars = 6621, line = 178, col = 42}})) [Rep (Fwd (Range {anchor = Pos {nChars = 6602, line = 178, col = 23}, position = Pos {nChars = 6606, line = 178, col = 27}})) (Call (Fwd (Range {anchor = Pos {nChars = 6602, line = 178, col = 23}, position = Pos {nChars = 6605, line = 178, col = 26}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 6607, line = 178, col = 28}, position = Pos {nChars = 6621, line = 178, col = 42}})) "Class.operator" []],Just (Seq (Fwd (Range {anchor = Pos {nChars = 6625, line = 178, col = 46}, position = Pos {nChars = 6640, line = 178, col = 61}})) [Rep (Fwd (Range {anchor = Pos {nChars = 6625, line = 178, col = 46}, position = Pos {nChars = 6629, line = 178, col = 50}})) (Call (Fwd (Range {anchor = Pos {nChars = 6625, line = 178, col = 46}, position = Pos {nChars = 6628, line = 178, col = 49}})) "lws" [],Nothing) (1,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 6630, line = 178, col = 51}, position = Pos {nChars = 6640, line = 178, col = 61}})) "Class.term" []])) (0,Nothing)]),(Fwd (Range {anchor = Pos {nChars = 6647, line = 180, col = 3}, position = Pos {nChars = 6673, line = 180, col = 29}}),(Fwd (Range {anchor = Pos {nChars = 6647, line = 180, col = 3}, position = Pos {nChars = 6661, line = 180, col = 17}}),"Class.operator",[]),Alt (Fwd (Range {anchor = Pos {nChars = 6664, line = 180, col = 20}, position = Pos {nChars = 6673, line = 180, col = 29}})) [Char (Fwd (Range {anchor = Pos {nChars = 6664, line = 180, col = 20}, position = Pos {nChars = 6667, line = 180, col = 23}})) '|',Char (Fwd (Range {anchor = Pos {nChars = 6670, line = 180, col = 26}, position = Pos {nChars = 6673, line = 180, col = 29}})) '-']),(Fwd (Range {anchor = Pos {nChars = 6676, line = 181, col = 3}, position = Pos {nChars = 6862, line = 185, col = 37}}),(Fwd (Range {anchor = Pos {nChars = 6676, line = 181, col = 3}, position = Pos {nChars = 6686, line = 181, col = 13}}),"Class.term",[]),Alt (Fwd (Range {anchor = Pos {nChars = 6693, line = 182, col = 7}, position = Pos {nChars = 6862, line = 185, col = 37}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 6693, line = 182, col = 7}, position = Pos {nChars = 6702, line = 182, col = 16}})) "class-var" (Call (Fwd (Range {anchor = Pos {nChars = 6704, line = 182, col = 18}, position = Pos {nChars = 6729, line = 182, col = 43}})) "enclose.colon" [Call (Fwd (Range {anchor = Pos {nChars = 6718, line = 182, col = 32}, position = Pos {nChars = 6728, line = 182, col = 42}})) "Name.class" []]),Ctor (Fwd (Range {anchor = Pos {nChars = 6736, line = 183, col = 7}, position = Pos {nChars = 6747, line = 183, col = 18}})) "class-range" (Seq (Fwd (Range {anchor = Pos {nChars = 6749, line = 183, col = 20}, position = Pos {nChars = 6789, line = 183, col = 60}})) [Char (Fwd (Range {anchor = Pos {nChars = 6749, line = 183, col = 20}, position = Pos {nChars = 6753, line = 183, col = 24}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6754, line = 183, col = 25}, position = Pos {nChars = 6761, line = 183, col = 32}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6762, line = 183, col = 33}, position = Pos {nChars = 6766, line = 183, col = 37}})) '\'',Str (Fwd (Range {anchor = Pos {nChars = 6767, line = 183, col = 38}, position = Pos {nChars = 6771, line = 183, col = 42}})) "..",Char (Fwd (Range {anchor = Pos {nChars = 6772, line = 183, col = 43}, position = Pos {nChars = 6776, line = 183, col = 47}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6777, line = 183, col = 48}, position = Pos {nChars = 6784, line = 183, col = 55}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6785, line = 183, col = 56}, position = Pos {nChars = 6789, line = 183, col = 60}})) '\'']),Ctor (Fwd (Range {anchor = Pos {nChars = 6796, line = 184, col = 7}, position = Pos {nChars = 6806, line = 184, col = 17}})) "class-char" (Seq (Fwd (Range {anchor = Pos {nChars = 6808, line = 184, col = 19}, position = Pos {nChars = 6825, line = 184, col = 36}})) [Char (Fwd (Range {anchor = Pos {nChars = 6808, line = 184, col = 19}, position = Pos {nChars = 6812, line = 184, col = 23}})) '\'',Call (Fwd (Range {anchor = Pos {nChars = 6813, line = 184, col = 24}, position = Pos {nChars = 6820, line = 184, col = 31}})) "char.sq" [],Char (Fwd (Range {anchor = Pos {nChars = 6821, line = 184, col = 32}, position = Pos {nChars = 6825, line = 184, col = 36}})) '\'']),Ctor (Fwd (Range {anchor = Pos {nChars = 6832, line = 185, col = 7}, position = Pos {nChars = 6841, line = 185, col = 16}})) "class-set" (Seq (Fwd (Range {anchor = Pos {nChars = 6843, line = 185, col = 18}, position = Pos {nChars = 6862, line = 185, col = 37}})) [Char (Fwd (Range {anchor = Pos {nChars = 6843, line = 185, col = 18}, position = Pos {nChars = 6847, line = 185, col = 22}})) '"',Rep (Fwd (Range {anchor = Pos {nChars = 6848, line = 185, col = 23}, position = Pos {nChars = 6857, line = 185, col = 32}})) (Call (Fwd (Range {anchor = Pos {nChars = 6848, line = 185, col = 23}, position = Pos {nChars = 6856, line = 185, col = 31}})) "chars.dq" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 6858, line = 185, col = 33}, position = Pos {nChars = 6862, line = 185, col = 37}})) '"'])]),(Fwd (Range {anchor = Pos {nChars = 6900, line = 189, col = 3}, position = Pos {nChars = 6943, line = 191, col = 18}}),(Fwd (Range {anchor = Pos {nChars = 6900, line = 189, col = 3}, position = Pos {nChars = 6907, line = 189, col = 10}}),"char.sq",[]),Alt (Fwd (Range {anchor = Pos {nChars = 6914, line = 190, col = 7}, position = Pos {nChars = 6943, line = 191, col = 18}})) [Sat (Fwd (Range {anchor = Pos {nChars = 6914, line = 190, col = 7}, position = Pos {nChars = 6925, line = 190, col = 18}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 6915, line = 190, col = 8}, position = Pos {nChars = 6924, line = 190, col = 17}})) "char.sq"],Call (Fwd (Range {anchor = Pos {nChars = 6932, line = 191, col = 7}, position = Pos {nChars = 6943, line = 191, col = 18}})) "char.escape" []]),(Fwd (Range {anchor = Pos {nChars = 6980, line = 194, col = 3}, position = Pos {nChars = 7027, line = 196, col = 18}}),(Fwd (Range {anchor = Pos {nChars = 6980, line = 194, col = 3}, position = Pos {nChars = 6988, line = 194, col = 11}}),"chars.dq",[]),Alt (Fwd (Range {anchor = Pos {nChars = 6995, line = 195, col = 7}, position = Pos {nChars = 7027, line = 196, col = 18}})) [Flat (Fwd (Range {anchor = Pos {nChars = 6995, line = 195, col = 7}, position = Pos {nChars = 7009, line = 195, col = 21}})) (Rep (Fwd (Range {anchor = Pos {nChars = 6996, line = 195, col = 8}, position = Pos {nChars = 7008, line = 195, col = 20}})) (Sat (Fwd (Range {anchor = Pos {nChars = 6996, line = 195, col = 8}, position = Pos {nChars = 7007, line = 195, col = 19}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 6997, line = 195, col = 9}, position = Pos {nChars = 7006, line = 195, col = 18}})) "char.dq"],Nothing) (1,Nothing)),Call (Fwd (Range {anchor = Pos {nChars = 7016, line = 196, col = 7}, position = Pos {nChars = 7027, line = 196, col = 18}})) "char.escape" []]),(Fwd (Range {anchor = Pos {nChars = 7112, line = 201, col = 3}, position = Pos {nChars = 7446, line = 209, col = 49}}),(Fwd (Range {anchor = Pos {nChars = 7112, line = 201, col = 3}, position = Pos {nChars = 7123, line = 201, col = 14}}),"char.escape",[]),Alt (Fwd (Range {anchor = Pos {nChars = 7130, line = 202, col = 7}, position = Pos {nChars = 7446, line = 209, col = 49}})) [Ctor (Fwd (Range {anchor = Pos {nChars = 7130, line = 202, col = 7}, position = Pos {nChars = 7141, line = 202, col = 18}})) "char-escape" (Flat (Fwd (Range {anchor = Pos {nChars = 7143, line = 202, col = 20}, position = Pos {nChars = 7169, line = 202, col = 46}})) (Seq (Fwd (Range {anchor = Pos {nChars = 7145, line = 202, col = 22}, position = Pos {nChars = 7167, line = 202, col = 44}})) [Char (Fwd (Range {anchor = Pos {nChars = 7145, line = 202, col = 22}, position = Pos {nChars = 7149, line = 202, col = 26}})) '\\',Sat (Fwd (Range {anchor = Pos {nChars = 7150, line = 202, col = 27}, position = Pos {nChars = 7167, line = 202, col = 44}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7151, line = 202, col = 28}, position = Pos {nChars = 7166, line = 202, col = 43}})) "char.escape.c"]])),Ctor (Fwd (Range {anchor = Pos {nChars = 7176, line = 203, col = 7}, position = Pos {nChars = 7187, line = 203, col = 18}})) "char-escape" (Seq (Fwd (Range {anchor = Pos {nChars = 7189, line = 203, col = 20}, position = Pos {nChars = 7213, line = 203, col = 44}})) [Str (Fwd (Range {anchor = Pos {nChars = 7189, line = 203, col = 20}, position = Pos {nChars = 7194, line = 203, col = 25}})) "\\x",Flat (Fwd (Range {anchor = Pos {nChars = 7195, line = 203, col = 26}, position = Pos {nChars = 7213, line = 203, col = 44}})) (Rep (Fwd (Range {anchor = Pos {nChars = 7196, line = 203, col = 27}, position = Pos {nChars = 7212, line = 203, col = 43}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7196, line = 203, col = 27}, position = Pos {nChars = 7209, line = 203, col = 40}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7197, line = 203, col = 28}, position = Pos {nChars = 7208, line = 203, col = 39}})) "digit.hex"],Nothing) (2,Just 2))]),Ctor (Fwd (Range {anchor = Pos {nChars = 7220, line = 204, col = 7}, position = Pos {nChars = 7231, line = 204, col = 18}})) "char-escape" (Seq (Fwd (Range {anchor = Pos {nChars = 7233, line = 204, col = 20}, position = Pos {nChars = 7257, line = 204, col = 44}})) [Str (Fwd (Range {anchor = Pos {nChars = 7233, line = 204, col = 20}, position = Pos {nChars = 7238, line = 204, col = 25}})) "\\u",Flat (Fwd (Range {anchor = Pos {nChars = 7239, line = 204, col = 26}, position = Pos {nChars = 7257, line = 204, col = 44}})) (Rep (Fwd (Range {anchor = Pos {nChars = 7240, line = 204, col = 27}, position = Pos {nChars = 7256, line = 204, col = 43}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7240, line = 204, col = 27}, position = Pos {nChars = 7253, line = 204, col = 40}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7241, line = 204, col = 28}, position = Pos {nChars = 7252, line = 204, col = 39}})) "digit.hex"],Nothing) (4,Just 4))]),Ctor (Fwd (Range {anchor = Pos {nChars = 7264, line = 205, col = 7}, position = Pos {nChars = 7275, line = 205, col = 18}})) "char-escape" (Seq (Fwd (Range {anchor = Pos {nChars = 7277, line = 205, col = 20}, position = Pos {nChars = 7397, line = 208, col = 24}})) [Str (Fwd (Range {anchor = Pos {nChars = 7277, line = 205, col = 20}, position = Pos {nChars = 7282, line = 205, col = 25}})) "\\U",Flat (Fwd (Range {anchor = Pos {nChars = 7305, line = 206, col = 23}, position = Pos {nChars = 7397, line = 208, col = 24}})) (Alt (Fwd (Range {anchor = Pos {nChars = 7307, line = 206, col = 25}, position = Pos {nChars = 7373, line = 207, col = 46}})) [Seq (Fwd (Range {anchor = Pos {nChars = 7307, line = 206, col = 25}, position = Pos {nChars = 7327, line = 206, col = 45}})) [Char (Fwd (Range {anchor = Pos {nChars = 7307, line = 206, col = 25}, position = Pos {nChars = 7310, line = 206, col = 28}})) '0',Rep (Fwd (Range {anchor = Pos {nChars = 7311, line = 206, col = 29}, position = Pos {nChars = 7327, line = 206, col = 45}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7311, line = 206, col = 29}, position = Pos {nChars = 7324, line = 206, col = 42}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7312, line = 206, col = 30}, position = Pos {nChars = 7323, line = 206, col = 41}})) "digit.hex"],Nothing) (5,Just 5)],Seq (Fwd (Range {anchor = Pos {nChars = 7352, line = 207, col = 25}, position = Pos {nChars = 7373, line = 207, col = 46}})) [Str (Fwd (Range {anchor = Pos {nChars = 7352, line = 207, col = 25}, position = Pos {nChars = 7356, line = 207, col = 29}})) "10",Rep (Fwd (Range {anchor = Pos {nChars = 7357, line = 207, col = 30}, position = Pos {nChars = 7373, line = 207, col = 46}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7357, line = 207, col = 30}, position = Pos {nChars = 7370, line = 207, col = 43}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7358, line = 207, col = 31}, position = Pos {nChars = 7369, line = 207, col = 42}})) "digit.hex"],Nothing) (4,Just 4)]])]),Ctor (Fwd (Range {anchor = Pos {nChars = 7404, line = 209, col = 7}, position = Pos {nChars = 7415, line = 209, col = 18}})) "char-escape" (Seq (Fwd (Range {anchor = Pos {nChars = 7417, line = 209, col = 20}, position = Pos {nChars = 7446, line = 209, col = 49}})) [Char (Fwd (Range {anchor = Pos {nChars = 7417, line = 209, col = 20}, position = Pos {nChars = 7421, line = 209, col = 24}})) '\\',Sat (Fwd (Range {anchor = Pos {nChars = 7422, line = 209, col = 25}, position = Pos {nChars = 7446, line = 209, col = 49}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7423, line = 209, col = 26}, position = Pos {nChars = 7445, line = 209, col = 48}})) "char.escape.passthru"]])]),(Fwd (Range {anchor = Pos {nChars = 7559, line = 215, col = 3}, position = Pos {nChars = 7620, line = 215, col = 64}}),(Fwd (Range {anchor = Pos {nChars = 7559, line = 215, col = 3}, position = Pos {nChars = 7568, line = 215, col = 12}}),"Name.rule",[]),Flat (Fwd (Range {anchor = Pos {nChars = 7571, line = 215, col = 15}, position = Pos {nChars = 7620, line = 215, col = 64}})) (Call (Fwd (Range {anchor = Pos {nChars = 7573, line = 215, col = 17}, position = Pos {nChars = 7618, line = 215, col = 62}})) "sep.dot" [Seq (Fwd (Range {anchor = Pos {nChars = 7581, line = 215, col = 25}, position = Pos {nChars = 7617, line = 215, col = 61}})) [Sat (Fwd (Range {anchor = Pos {nChars = 7581, line = 215, col = 25}, position = Pos {nChars = 7596, line = 215, col = 40}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7582, line = 215, col = 26}, position = Pos {nChars = 7595, line = 215, col = 39}})) "ascii.alpha"],Rep (Fwd (Range {anchor = Pos {nChars = 7597, line = 215, col = 41}, position = Pos {nChars = 7617, line = 215, col = 61}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7597, line = 215, col = 41}, position = Pos {nChars = 7616, line = 215, col = 60}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7598, line = 215, col = 42}, position = Pos {nChars = 7615, line = 215, col = 59}})) "ascii.alpha-num"],Nothing) (0,Nothing)]])),(Fwd (Range {anchor = Pos {nChars = 7625, line = 217, col = 3}, position = Pos {nChars = 7678, line = 217, col = 56}}),(Fwd (Range {anchor = Pos {nChars = 7625, line = 217, col = 3}, position = Pos {nChars = 7635, line = 217, col = 13}}),"Name.param",[]),Flat (Fwd (Range {anchor = Pos {nChars = 7638, line = 217, col = 16}, position = Pos {nChars = 7678, line = 217, col = 56}})) (Seq (Fwd (Range {anchor = Pos {nChars = 7640, line = 217, col = 18}, position = Pos {nChars = 7676, line = 217, col = 54}})) [Sat (Fwd (Range {anchor = Pos {nChars = 7640, line = 217, col = 18}, position = Pos {nChars = 7655, line = 217, col = 33}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7641, line = 217, col = 19}, position = Pos {nChars = 7654, line = 217, col = 32}})) "ascii.alpha"],Rep (Fwd (Range {anchor = Pos {nChars = 7656, line = 217, col = 34}, position = Pos {nChars = 7676, line = 217, col = 54}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7656, line = 217, col = 34}, position = Pos {nChars = 7675, line = 217, col = 53}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7657, line = 217, col = 35}, position = Pos {nChars = 7674, line = 217, col = 52}})) "ascii.alpha-num"],Nothing) (0,Nothing)])),(Fwd (Range {anchor = Pos {nChars = 7747, line = 220, col = 3}, position = Pos {nChars = 7809, line = 220, col = 65}}),(Fwd (Range {anchor = Pos {nChars = 7747, line = 220, col = 3}, position = Pos {nChars = 7756, line = 220, col = 12}}),"Name.ctor",[]),Flat (Fwd (Range {anchor = Pos {nChars = 7759, line = 220, col = 15}, position = Pos {nChars = 7809, line = 220, col = 65}})) (Call (Fwd (Range {anchor = Pos {nChars = 7761, line = 220, col = 17}, position = Pos {nChars = 7807, line = 220, col = 63}})) "sep.dash" [Seq (Fwd (Range {anchor = Pos {nChars = 7770, line = 220, col = 26}, position = Pos {nChars = 7806, line = 220, col = 62}})) [Sat (Fwd (Range {anchor = Pos {nChars = 7770, line = 220, col = 26}, position = Pos {nChars = 7785, line = 220, col = 41}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7771, line = 220, col = 27}, position = Pos {nChars = 7784, line = 220, col = 40}})) "ascii.alpha"],Rep (Fwd (Range {anchor = Pos {nChars = 7786, line = 220, col = 42}, position = Pos {nChars = 7806, line = 220, col = 62}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7786, line = 220, col = 42}, position = Pos {nChars = 7805, line = 220, col = 61}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7787, line = 220, col = 43}, position = Pos {nChars = 7804, line = 220, col = 60}})) "ascii.alpha-num"],Nothing) (0,Nothing)]])),(Fwd (Range {anchor = Pos {nChars = 7813, line = 222, col = 3}, position = Pos {nChars = 7879, line = 222, col = 69}}),(Fwd (Range {anchor = Pos {nChars = 7813, line = 222, col = 3}, position = Pos {nChars = 7823, line = 222, col = 13}}),"Name.class",[]),Flat (Fwd (Range {anchor = Pos {nChars = 7826, line = 222, col = 16}, position = Pos {nChars = 7879, line = 222, col = 69}})) (Call (Fwd (Range {anchor = Pos {nChars = 7828, line = 222, col = 18}, position = Pos {nChars = 7877, line = 222, col = 67}})) "sep.dot" [Seq (Fwd (Range {anchor = Pos {nChars = 7836, line = 222, col = 26}, position = Pos {nChars = 7876, line = 222, col = 66}})) [Sat (Fwd (Range {anchor = Pos {nChars = 7836, line = 222, col = 26}, position = Pos {nChars = 7851, line = 222, col = 41}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7837, line = 222, col = 27}, position = Pos {nChars = 7850, line = 222, col = 40}})) "ascii.alpha"],Rep (Fwd (Range {anchor = Pos {nChars = 7852, line = 222, col = 42}, position = Pos {nChars = 7876, line = 222, col = 66}})) (Sat (Fwd (Range {anchor = Pos {nChars = 7852, line = 222, col = 42}, position = Pos {nChars = 7875, line = 222, col = 65}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 7853, line = 222, col = 43}, position = Pos {nChars = 7870, line = 222, col = 60}})) "ascii.alpha-num",SatChar (Fwd (Range {anchor = Pos {nChars = 7870, line = 222, col = 60}, position = Pos {nChars = 7874, line = 222, col = 64}})) '-'],Nothing) (0,Nothing)]])),(Fwd (Range {anchor = Pos {nChars = 7907, line = 226, col = 3}, position = Pos {nChars = 7939, line = 226, col = 35}}),(Fwd (Range {anchor = Pos {nChars = 7907, line = 226, col = 3}, position = Pos {nChars = 7921, line = 226, col = 17}}),"enclose",["o","i","c"]),Seq (Fwd (Range {anchor = Pos {nChars = 7924, line = 226, col = 20}, position = Pos {nChars = 7939, line = 226, col = 35}})) [Call (Fwd (Range {anchor = Pos {nChars = 7924, line = 226, col = 20}, position = Pos {nChars = 7925, line = 226, col = 21}})) "o" [],Rep (Fwd (Range {anchor = Pos {nChars = 7926, line = 226, col = 22}, position = Pos {nChars = 7930, line = 226, col = 26}})) (Call (Fwd (Range {anchor = Pos {nChars = 7926, line = 226, col = 22}, position = Pos {nChars = 7929, line = 226, col = 25}})) "lws" [],Nothing) (0,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 7931, line = 226, col = 27}, position = Pos {nChars = 7932, line = 226, col = 28}})) "i" [],Rep (Fwd (Range {anchor = Pos {nChars = 7933, line = 226, col = 29}, position = Pos {nChars = 7937, line = 226, col = 33}})) (Call (Fwd (Range {anchor = Pos {nChars = 7933, line = 226, col = 29}, position = Pos {nChars = 7936, line = 226, col = 32}})) "lws" [],Nothing) (0,Nothing),Call (Fwd (Range {anchor = Pos {nChars = 7938, line = 226, col = 34}, position = Pos {nChars = 7939, line = 226, col = 35}})) "c" []]),(Fwd (Range {anchor = Pos {nChars = 7944, line = 228, col = 3}, position = Pos {nChars = 7982, line = 228, col = 41}}),(Fwd (Range {anchor = Pos {nChars = 7944, line = 228, col = 3}, position = Pos {nChars = 7961, line = 228, col = 20}}),"enclose.parens",["i"]),Call (Fwd (Range {anchor = Pos {nChars = 7964, line = 228, col = 23}, position = Pos {nChars = 7982, line = 228, col = 41}})) "enclose" [Char (Fwd (Range {anchor = Pos {nChars = 7972, line = 228, col = 31}, position = Pos {nChars = 7975, line = 228, col = 34}})) '(',Call (Fwd (Range {anchor = Pos {nChars = 7976, line = 228, col = 35}, position = Pos {nChars = 7977, line = 228, col = 36}})) "i" [],Char (Fwd (Range {anchor = Pos {nChars = 7978, line = 228, col = 37}, position = Pos {nChars = 7981, line = 228, col = 40}})) ')']),(Fwd (Range {anchor = Pos {nChars = 7985, line = 229, col = 3}, position = Pos {nChars = 8023, line = 229, col = 41}}),(Fwd (Range {anchor = Pos {nChars = 7985, line = 229, col = 3}, position = Pos {nChars = 8002, line = 229, col = 20}}),"enclose.braces",["i"]),Call (Fwd (Range {anchor = Pos {nChars = 8005, line = 229, col = 23}, position = Pos {nChars = 8023, line = 229, col = 41}})) "enclose" [Char (Fwd (Range {anchor = Pos {nChars = 8013, line = 229, col = 31}, position = Pos {nChars = 8016, line = 229, col = 34}})) '{',Call (Fwd (Range {anchor = Pos {nChars = 8017, line = 229, col = 35}, position = Pos {nChars = 8018, line = 229, col = 36}})) "i" [],Char (Fwd (Range {anchor = Pos {nChars = 8019, line = 229, col = 37}, position = Pos {nChars = 8022, line = 229, col = 40}})) '}']),(Fwd (Range {anchor = Pos {nChars = 8026, line = 230, col = 3}, position = Pos {nChars = 8064, line = 230, col = 41}}),(Fwd (Range {anchor = Pos {nChars = 8026, line = 230, col = 3}, position = Pos {nChars = 8043, line = 230, col = 20}}),"enclose.angles",["i"]),Call (Fwd (Range {anchor = Pos {nChars = 8046, line = 230, col = 23}, position = Pos {nChars = 8064, line = 230, col = 41}})) "enclose" [Char (Fwd (Range {anchor = Pos {nChars = 8054, line = 230, col = 31}, position = Pos {nChars = 8057, line = 230, col = 34}})) '<',Call (Fwd (Range {anchor = Pos {nChars = 8058, line = 230, col = 35}, position = Pos {nChars = 8059, line = 230, col = 36}})) "i" [],Char (Fwd (Range {anchor = Pos {nChars = 8060, line = 230, col = 37}, position = Pos {nChars = 8063, line = 230, col = 40}})) '>']),(Fwd (Range {anchor = Pos {nChars = 8067, line = 231, col = 3}, position = Pos {nChars = 8104, line = 231, col = 40}}),(Fwd (Range {anchor = Pos {nChars = 8067, line = 231, col = 3}, position = Pos {nChars = 8083, line = 231, col = 19}}),"enclose.colon",["i"]),Call (Fwd (Range {anchor = Pos {nChars = 8086, line = 231, col = 22}, position = Pos {nChars = 8104, line = 231, col = 40}})) "enclose" [Char (Fwd (Range {anchor = Pos {nChars = 8094, line = 231, col = 30}, position = Pos {nChars = 8097, line = 231, col = 33}})) ':',Call (Fwd (Range {anchor = Pos {nChars = 8098, line = 231, col = 34}, position = Pos {nChars = 8099, line = 231, col = 35}})) "i" [],Char (Fwd (Range {anchor = Pos {nChars = 8100, line = 231, col = 36}, position = Pos {nChars = 8103, line = 231, col = 39}})) ':']),(Fwd (Range {anchor = Pos {nChars = 8108, line = 233, col = 3}, position = Pos {nChars = 8129, line = 233, col = 24}}),(Fwd (Range {anchor = Pos {nChars = 8108, line = 233, col = 3}, position = Pos {nChars = 8113, line = 233, col = 8}}),"comma",[]),Seq (Fwd (Range {anchor = Pos {nChars = 8116, line = 233, col = 11}, position = Pos {nChars = 8129, line = 233, col = 24}})) [Rep (Fwd (Range {anchor = Pos {nChars = 8116, line = 233, col = 11}, position = Pos {nChars = 8120, line = 233, col = 15}})) (Call (Fwd (Range {anchor = Pos {nChars = 8116, line = 233, col = 11}, position = Pos {nChars = 8119, line = 233, col = 14}})) "lws" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 8121, line = 233, col = 16}, position = Pos {nChars = 8124, line = 233, col = 19}})) ',',Rep (Fwd (Range {anchor = Pos {nChars = 8125, line = 233, col = 20}, position = Pos {nChars = 8129, line = 233, col = 24}})) (Call (Fwd (Range {anchor = Pos {nChars = 8125, line = 233, col = 20}, position = Pos {nChars = 8128, line = 233, col = 23}})) "lws" [],Nothing) (0,Nothing)]),(Fwd (Range {anchor = Pos {nChars = 8132, line = 234, col = 3}, position = Pos {nChars = 8153, line = 234, col = 24}}),(Fwd (Range {anchor = Pos {nChars = 8132, line = 234, col = 3}, position = Pos {nChars = 8137, line = 234, col = 8}}),"colon",[]),Seq (Fwd (Range {anchor = Pos {nChars = 8140, line = 234, col = 11}, position = Pos {nChars = 8153, line = 234, col = 24}})) [Rep (Fwd (Range {anchor = Pos {nChars = 8140, line = 234, col = 11}, position = Pos {nChars = 8144, line = 234, col = 15}})) (Call (Fwd (Range {anchor = Pos {nChars = 8140, line = 234, col = 11}, position = Pos {nChars = 8143, line = 234, col = 14}})) "lws" [],Nothing) (0,Nothing),Char (Fwd (Range {anchor = Pos {nChars = 8145, line = 234, col = 16}, position = Pos {nChars = 8148, line = 234, col = 19}})) ':',Rep (Fwd (Range {anchor = Pos {nChars = 8149, line = 234, col = 20}, position = Pos {nChars = 8153, line = 234, col = 24}})) (Call (Fwd (Range {anchor = Pos {nChars = 8149, line = 234, col = 20}, position = Pos {nChars = 8152, line = 234, col = 23}})) "lws" [],Nothing) (1,Nothing)]),(Fwd (Range {anchor = Pos {nChars = 8157, line = 236, col = 3}, position = Pos {nChars = 8182, line = 236, col = 28}}),(Fwd (Range {anchor = Pos {nChars = 8157, line = 236, col = 3}, position = Pos {nChars = 8168, line = 236, col = 14}}),"sep.by",["e","s"]),Seq (Fwd (Range {anchor = Pos {nChars = 8171, line = 236, col = 17}, position = Pos {nChars = 8182, line = 236, col = 28}})) [Call (Fwd (Range {anchor = Pos {nChars = 8171, line = 236, col = 17}, position = Pos {nChars = 8172, line = 236, col = 18}})) "e" [],Rep (Fwd (Range {anchor = Pos {nChars = 8173, line = 236, col = 19}, position = Pos {nChars = 8182, line = 236, col = 28}})) (Call (Fwd (Range {anchor = Pos {nChars = 8174, line = 236, col = 20}, position = Pos {nChars = 8175, line = 236, col = 21}})) "s" [],Just (Call (Fwd (Range {anchor = Pos {nChars = 8179, line = 236, col = 25}, position = Pos {nChars = 8180, line = 236, col = 26}})) "e" [])) (0,Nothing)]),(Fwd (Range {anchor = Pos {nChars = 8187, line = 238, col = 3}, position = Pos {nChars = 8217, line = 238, col = 33}}),(Fwd (Range {anchor = Pos {nChars = 8187, line = 238, col = 3}, position = Pos {nChars = 8199, line = 238, col = 15}}),"sep.comma",["e"]),Call (Fwd (Range {anchor = Pos {nChars = 8202, line = 238, col = 18}, position = Pos {nChars = 8217, line = 238, col = 33}})) "sep.by" [Call (Fwd (Range {anchor = Pos {nChars = 8209, line = 238, col = 25}, position = Pos {nChars = 8210, line = 238, col = 26}})) "e" [],Call (Fwd (Range {anchor = Pos {nChars = 8211, line = 238, col = 27}, position = Pos {nChars = 8216, line = 238, col = 32}})) "comma" []]),(Fwd (Range {anchor = Pos {nChars = 8220, line = 239, col = 3}, position = Pos {nChars = 8246, line = 239, col = 29}}),(Fwd (Range {anchor = Pos {nChars = 8220, line = 239, col = 3}, position = Pos {nChars = 8230, line = 239, col = 13}}),"sep.dot",["e"]),Call (Fwd (Range {anchor = Pos {nChars = 8233, line = 239, col = 16}, position = Pos {nChars = 8246, line = 239, col = 29}})) "sep.by" [Call (Fwd (Range {anchor = Pos {nChars = 8240, line = 239, col = 23}, position = Pos {nChars = 8241, line = 239, col = 24}})) "e" [],Char (Fwd (Range {anchor = Pos {nChars = 8242, line = 239, col = 25}, position = Pos {nChars = 8245, line = 239, col = 28}})) '.']),(Fwd (Range {anchor = Pos {nChars = 8249, line = 240, col = 3}, position = Pos {nChars = 8276, line = 240, col = 30}}),(Fwd (Range {anchor = Pos {nChars = 8249, line = 240, col = 3}, position = Pos {nChars = 8260, line = 240, col = 14}}),"sep.dash",["e"]),Call (Fwd (Range {anchor = Pos {nChars = 8263, line = 240, col = 17}, position = Pos {nChars = 8276, line = 240, col = 30}})) "sep.by" [Call (Fwd (Range {anchor = Pos {nChars = 8270, line = 240, col = 24}, position = Pos {nChars = 8271, line = 240, col = 25}})) "e" [],Char (Fwd (Range {anchor = Pos {nChars = 8272, line = 240, col = 26}, position = Pos {nChars = 8275, line = 240, col = 29}})) '-']),(Fwd (Range {anchor = Pos {nChars = 8548, line = 254, col = 3}, position = Pos {nChars = 8582, line = 254, col = 37}}),(Fwd (Range {anchor = Pos {nChars = 8548, line = 254, col = 3}, position = Pos {nChars = 8555, line = 254, col = 10}}),"num.nat",[]),Flat (Fwd (Range {anchor = Pos {nChars = 8558, line = 254, col = 13}, position = Pos {nChars = 8582, line = 254, col = 37}})) (Seq (Fwd (Range {anchor = Pos {nChars = 8560, line = 254, col = 15}, position = Pos {nChars = 8580, line = 254, col = 35}})) [Sat (Fwd (Range {anchor = Pos {nChars = 8560, line = 254, col = 15}, position = Pos {nChars = 8569, line = 254, col = 24}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 8561, line = 254, col = 16}, position = Pos {nChars = 8568, line = 254, col = 23}})) "digit"],Rep (Fwd (Range {anchor = Pos {nChars = 8570, line = 254, col = 25}, position = Pos {nChars = 8580, line = 254, col = 35}})) (Sat (Fwd (Range {anchor = Pos {nChars = 8570, line = 254, col = 25}, position = Pos {nChars = 8579, line = 254, col = 34}})) [SatVar (Fwd (Range {anchor = Pos {nChars = 8571, line = 254, col = 26}, position = Pos {nChars = 8578, line = 254, col = 33}})) "digit"],Nothing) (0,Nothing)]))], classes = [(Fwd (Range {anchor = Pos {nChars = 6946, line = 192, col = 3}, position = Pos {nChars = 6975, line = 192, col = 32}}),(Fwd (Range {anchor = Pos {nChars = 6947, line = 192, col = 4}, position = Pos {nChars = 6954, line = 192, col = 11}}),"char.sq"),ClassMinus (ClassRange (Fwd (Range {anchor = Pos {nChars = 6958, line = 192, col = 15}, position = Pos {nChars = 6966, line = 192, col = 23}})) ' ' '~') (ClassSet (Fwd (Range {anchor = Pos {nChars = 6969, line = 192, col = 26}, position = Pos {nChars = 6975, line = 192, col = 32}})) "'\\")),(Fwd (Range {anchor = Pos {nChars = 7030, line = 197, col = 3}, position = Pos {nChars = 7059, line = 197, col = 32}}),(Fwd (Range {anchor = Pos {nChars = 7031, line = 197, col = 4}, position = Pos {nChars = 7038, line = 197, col = 11}}),"char.dq"),ClassMinus (ClassRange (Fwd (Range {anchor = Pos {nChars = 7042, line = 197, col = 15}, position = Pos {nChars = 7050, line = 197, col = 23}})) ' ' '~') (ClassSet (Fwd (Range {anchor = Pos {nChars = 7053, line = 197, col = 26}, position = Pos {nChars = 7059, line = 197, col = 32}})) "\"\\")),(Fwd (Range {anchor = Pos {nChars = 7064, line = 199, col = 3}, position = Pos {nChars = 7108, line = 199, col = 47}}),(Fwd (Range {anchor = Pos {nChars = 7065, line = 199, col = 4}, position = Pos {nChars = 7075, line = 199, col = 14}}),"char.brack"),ClassMinus (ClassVar (Fwd (Range {anchor = Pos {nChars = 7079, line = 199, col = 18}, position = Pos {nChars = 7092, line = 199, col = 31}})) "ascii.print") (ClassSet (Fwd (Range {anchor = Pos {nChars = 7095, line = 199, col = 34}, position = Pos {nChars = 7108, line = 199, col = 47}})) " []'\"-:\\")),(Fwd (Range {anchor = Pos {nChars = 7449, line = 210, col = 3}, position = Pos {nChars = 7478, line = 210, col = 32}}),(Fwd (Range {anchor = Pos {nChars = 7450, line = 210, col = 4}, position = Pos {nChars = 7463, line = 210, col = 17}}),"char.escape.c"),ClassSet (Fwd (Range {anchor = Pos {nChars = 7467, line = 210, col = 21}, position = Pos {nChars = 7478, line = 210, col = 32}})) "0abefnrtv"),(Fwd (Range {anchor = Pos {nChars = 7481, line = 211, col = 3}, position = Pos {nChars = 7545, line = 211, col = 67}}),(Fwd (Range {anchor = Pos {nChars = 7482, line = 211, col = 4}, position = Pos {nChars = 7502, line = 211, col = 24}}),"char.escape.passthru"),ClassMinus (ClassMinus (ClassVar (Fwd (Range {anchor = Pos {nChars = 7506, line = 211, col = 28}, position = Pos {nChars = 7519, line = 211, col = 41}})) "ascii.print") (ClassVar (Fwd (Range {anchor = Pos {nChars = 7522, line = 211, col = 44}, position = Pos {nChars = 7537, line = 211, col = 59}})) "char.escape.c")) (ClassSet (Fwd (Range {anchor = Pos {nChars = 7540, line = 211, col = 62}, position = Pos {nChars = 7545, line = 211, col = 67}})) "xuU")),(Fwd (Range {anchor = Pos {nChars = 8291, line = 244, col = 3}, position = Pos {nChars = 8315, line = 244, col = 27}}),(Fwd (Range {anchor = Pos {nChars = 8292, line = 244, col = 4}, position = Pos {nChars = 8303, line = 244, col = 15}}),"ascii.print"),ClassRange (Fwd (Range {anchor = Pos {nChars = 8307, line = 244, col = 19}, position = Pos {nChars = 8315, line = 244, col = 27}})) ' ' '~'),(Fwd (Range {anchor = Pos {nChars = 8319, line = 246, col = 3}, position = Pos {nChars = 8337, line = 246, col = 21}}),(Fwd (Range {anchor = Pos {nChars = 8320, line = 246, col = 4}, position = Pos {nChars = 8325, line = 246, col = 9}}),"digit"),ClassRange (Fwd (Range {anchor = Pos {nChars = 8329, line = 246, col = 13}, position = Pos {nChars = 8337, line = 246, col = 21}})) '0' '9'),(Fwd (Range {anchor = Pos {nChars = 8340, line = 247, col = 3}, position = Pos {nChars = 8383, line = 247, col = 46}}),(Fwd (Range {anchor = Pos {nChars = 8341, line = 247, col = 4}, position = Pos {nChars = 8350, line = 247, col = 13}}),"digit.hex"),ClassUnion (ClassUnion (ClassVar (Fwd (Range {anchor = Pos {nChars = 8354, line = 247, col = 17}, position = Pos {nChars = 8361, line = 247, col = 24}})) "digit") (ClassRange (Fwd (Range {anchor = Pos {nChars = 8364, line = 247, col = 27}, position = Pos {nChars = 8372, line = 247, col = 35}})) 'a' 'f')) (ClassRange (Fwd (Range {anchor = Pos {nChars = 8375, line = 247, col = 38}, position = Pos {nChars = 8383, line = 247, col = 46}})) 'A' 'F')),(Fwd (Range {anchor = Pos {nChars = 8387, line = 249, col = 3}, position = Pos {nChars = 8438, line = 249, col = 54}}),(Fwd (Range {anchor = Pos {nChars = 8388, line = 249, col = 4}, position = Pos {nChars = 8399, line = 249, col = 15}}),"ascii.alpha"),ClassUnion (ClassVar (Fwd (Range {anchor = Pos {nChars = 8403, line = 249, col = 19}, position = Pos {nChars = 8419, line = 249, col = 35}})) "ascii.alpha.lo") (ClassVar (Fwd (Range {anchor = Pos {nChars = 8422, line = 249, col = 38}, position = Pos {nChars = 8438, line = 249, col = 54}})) "ascii.alpha.hi")),(Fwd (Range {anchor = Pos {nChars = 8441, line = 250, col = 3}, position = Pos {nChars = 8468, line = 250, col = 30}}),(Fwd (Range {anchor = Pos {nChars = 8442, line = 250, col = 4}, position = Pos {nChars = 8456, line = 250, col = 18}}),"ascii.alpha.lo"),ClassRange (Fwd (Range {anchor = Pos {nChars = 8460, line = 250, col = 22}, position = Pos {nChars = 8468, line = 250, col = 30}})) 'a' 'z'),(Fwd (Range {anchor = Pos {nChars = 8471, line = 251, col = 3}, position = Pos {nChars = 8498, line = 251, col = 30}}),(Fwd (Range {anchor = Pos {nChars = 8472, line = 251, col = 4}, position = Pos {nChars = 8486, line = 251, col = 18}}),"ascii.alpha.hi"),ClassRange (Fwd (Range {anchor = Pos {nChars = 8490, line = 251, col = 22}, position = Pos {nChars = 8498, line = 251, col = 30}})) 'A' 'Z'),(Fwd (Range {anchor = Pos {nChars = 8501, line = 252, col = 3}, position = Pos {nChars = 8544, line = 252, col = 46}}),(Fwd (Range {anchor = Pos {nChars = 8502, line = 252, col = 4}, position = Pos {nChars = 8517, line = 252, col = 19}}),"ascii.alpha-num"),ClassUnion (ClassVar (Fwd (Range {anchor = Pos {nChars = 8521, line = 252, col = 23}, position = Pos {nChars = 8534, line = 252, col = 36}})) "ascii.alpha") (ClassVar (Fwd (Range {anchor = Pos {nChars = 8537, line = 252, col = 39}, position = Pos {nChars = 8544, line = 252, col = 46}})) "digit"))]}


------ Cleanup ------

pattern Kw :: String -> Texpr
pattern Kw str <- Atom _ str

clean :: Texprs -> Texprs
clean ts = cleanKeywords <$> concatMap cleanSpace ts

cleanSpace :: Texpr -> Texprs
cleanSpace t@(Atom _ _) = [t]
cleanSpace (Combo l name ts)
  | name `elem` ["space", "nl", "comment", "doc", "bird-foot"] = []
  --- | "BirdFoot" `isPrefixOf` name = []
  | otherwise = [Combo l name (concatMap cleanSpace ts)]
cleanSpace (Error _ _ _) = error "internal Peg error"

cleanKeywords :: Texpr -> Texpr
cleanKeywords t@(Atom _ _) = t
cleanKeywords (Combo l "rule-sat" ((cleanKeywords <$>) -> ts))
  | (Kw "[^" : (unsnoc -> Just (ts', Kw "]"))) <- ts
  = Combo l "rule-sat.neg" ts'
cleanKeywords (Combo l ctor ((cleanKeywords <$>) -> ts0)) = Combo l ctor (go ctor ts0)
  where
  go "def-rule" (name : Kw "=" : rest) = name : rest
  go "rule-parametric" (f : Kw "<" : (unsnoc -> Just (ts, Kw ">"))) = f : concatMap cleanComma ts
  go "rule-ctor" (name : Kw ":" : rest) = name:rest
  go "rep-custom" (Kw "{" : (unsnoc -> Just (ts, Kw "}"))) = ts
  go "rep-custom" [Kw "{", lo, comma@(Kw ","), hi, Kw "}"] = [lo, comma, hi]
  go "rep-custom" [Kw "{", comma@(Kw ","), hi, Kw "}"] = [comma, hi]
  go "rep-custom" [Kw "{", lo, comma@(Kw ","), Kw "}"] = [lo, comma]
  go "rule-commit" [Kw "(", t1, Kw "->", t2, Kw ")"] = [t1, t2]
  go "rule-group" (Kw "(" : (unsnoc -> Just (ts, Kw ")"))) = ts
  go "rule-flat" (Kw "/" : (unsnoc -> Just (ts, Kw "/"))) = ts
  go "rule-call" (f : Kw "<" : (unsnoc -> Just (ts, Kw ">"))) = f : concatMap cleanComma ts
  go "rule-char" [Kw "\'", c, Kw "\'"] = [c]
  go "rule-string" (Kw "\"" : (unsnoc -> Just (ts, Kw "\""))) = ts
  go "rule-sat" (Kw "[" : (unsnoc -> Just (ts, Kw "]"))) = ts
  go "rule-end" [Kw "$"] = []
  go "rule-void" (Kw "0" : Kw ":" : Kw "\"" : (unsnoc -> Just (ts, Kw "\""))) = ts
  go "sat-range" [Kw "\'", lo, Kw "\'", Kw "..", Kw "\'", hi, Kw "\'"] = [lo, hi]
  go "sat-char" [Kw "\'", c, Kw "\'"] = [c]
  go "sat-var" [Kw ":", name, Kw ":"] = [name]
  go "def-class" (Kw ":":name:Kw ":":Kw "=":body) = (name : body)
  go "class-var" [Kw ":", name, Kw ":"] = [name]
  go "class-set" (Kw "\"" : (unsnoc -> Just (ts, Kw "\""))) = ts
  go "class-range" [Kw "\'", lo, Kw "\'", Kw "..", Kw "\'", hi, Kw "\'"] = [lo, hi]
  go "class-char" [Kw "\'", c, Kw "\'"] = [c]
  go _ other = other
cleanKeywords (Error _ _ _) = error "internal Peg error"

cleanComma :: Texpr -> Texprs
cleanComma (Kw ",") = []
cleanComma t = [t]

unsnoc :: [a] -> Maybe ([a], a)
unsnoc xs = do
  (x,xs') <- uncons (reverse xs)
  pure (reverse xs', x)

parsePeg :: Texprs -> Peg
parsePeg ts0 =
  let (classes, ts1) = parseClasses ts0
      (rules, ts2) = parseRules ts1
      start = parseStartDef ts2
   in Peg {start, rules, classes}

------ Start ------

type StartDef = Maybe (FwdRange, String)

parseStartDef :: Texprs -> StartDef
parseStartDef [] = Nothing
parseStartDef [t] = Just $ go t
  where
  go (Combo l "def-start" [Atom _ name]) = (l, name)
  go _ = error "internal Peg grammar error"
parseStartDef _ = error "internal Peg grammar error"

------ Rules ------

type RuleDef = (FwdRange, (FwdRange, String, [String]), Rule)

parseRules :: Texprs -> ([RuleDef], Texprs)
parseRules defs =
  let (rs, defs') = partition isRuleDef defs
      rs' = parseRuleDef <$> rs
   in (rs', defs')
  where
  isRuleDef (Combo _ "def-rule" _) = True
  isRuleDef _ = False

parseRuleDef :: Texpr -> RuleDef
parseRuleDef (Combo l "def-rule" [binder,body]) = (l, parseRuleBinder binder, parseRule body)
parseRuleDef _ = error "internal Peg grammar error"

parseRuleBinder :: Texpr -> (FwdRange, String, [String])
parseRuleBinder (Atom l str) = (l, str, [])
parseRuleBinder (Combo l "rule-parametric" (f:params)) =
  (l, fromName f, fromName <$> params)
  where
  fromName (Atom _ str) = str
  fromName _  = error "internal Peg grammar error"
parseRuleBinder _ = error "internal Peg grammar error"

parseRule :: Texpr -> Rule
parseRule (Combo l "rule-alt" ts) = Alt l $ loop ts
  where
  loop [t] = [parseRule t]
  loop (a:Kw "|":rest) = parseRule a : loop rest
  loop _ = error "internal Peg grammar error"
parseRule (Combo _ "rule-ctor" [Atom l ctor, g]) = Ctor l ctor $ parseRule g
parseRule (Combo l "rule-seq" ts) = Seq l $ parseRule <$> ts
parseRule (Combo l "rule-rep" [g, amt]) = Rep l (parseCommit g) (parseAmount amt)
  where
  parseCommit :: Texpr -> (Rule, Maybe Rule)
  parseCommit (Combo _ "rule-commit" [g1, g2]) = (parseRule g1, Just $ parseRule g2)
  parseCommit g1 = (parseRule g1, Nothing)
  parseAmount :: Texpr -> (Int, Maybe Int)
  parseAmount (Kw "*") = (0, Nothing)
  parseAmount (Kw "+") = (1, Nothing)
  parseAmount (Kw "?") = (0, Just 1)
  parseAmount (Combo _ "rep-custom" [Kw ","]) = (0, Nothing)
  parseAmount (Combo _ "rep-custom" [t]) = (parseInt t, Just $ parseInt t)
  parseAmount (Combo _ "rep-custom" [t,Kw ","]) = (parseInt t, Nothing)
  parseAmount (Combo _ "rep-custom" [Kw ",", t]) = (0, Just $ parseInt t)
  parseAmount (Combo _ "rep-custom" [t1, Kw ",", t2]) = (parseInt t1, Just $ parseInt t2)
  parseAmount _ = error "internal Peg grammar error"
  parseInt :: Texpr -> Int
  parseInt (Atom _ n) = read n
  parseInt _ = error "internal Peg grammar error"
parseRule (Combo _ "rule-group" [g]) = parseRule g
parseRule (Combo l "rule-flat" [g]) = Flat l $ parseRule g
parseRule (Combo l "rule-call" (Atom _ f : args)) = Call l f (parseRule <$> args)
parseRule (Combo l "rule-char" [c]) = Char l $ parseChar c
parseRule (Combo l "rule-string" ts) = Str l $ concatMap parseStr ts
parseRule (Combo l "rule-sat" ts) = Sat l $ parseSatClass <$> ts
parseRule (Combo l "rule-sat.neg" ts) = SatNeg l $ parseSatClass <$> ts
parseRule (Combo l "rule-end" []) = End l
-- parseRule (Combo l "rule-void" [Atom _ msg]) = Void l msg -- TODO
parseRule _ = error "internal Peg grammar error"

parseSatClass :: Texpr -> SatClass
parseSatClass = \case
  Combo l "sat-char" [c] -> SatChar l (parseChar c)
  Combo l "sat-range" [lo, hi] -> SatRange l (parseChar lo) (parseChar hi)
  Combo l "sat-var" [Atom _ name] -> SatVar l name
  Atom l cs -> SatSet l cs
  _ -> error "internal Peg grammar error"

------ Character Classes ------

type ClassDef = (FwdRange, (FwdRange, String), CharClass)

parseClasses :: Texprs -> ([ClassDef], Texprs)
parseClasses defs =
  let (clss, defs') = partition isClassDef defs
      clss' = parseClass <$> clss
   in (clss', defs')
  where
  isClassDef (Combo _ "def-class" _) = True
  isClassDef _ = False

parseClass :: Texpr -> (FwdRange, (FwdRange, String), CharClass)
parseClass (Combo l "def-class" (Atom xLoc x:body)) =
  (l, (xLoc, x), parseClassBody body)
parseClass _ = error "internal Peg grammar error"

parseClassBody :: Texprs -> CharClass
parseClassBody = loop . reverse
  where
  loop = \case
    [t] -> parseClassTerm t
    (b:o:prior) -> (parseOper o) (loop prior) (parseClassTerm b)
    _ -> error "internal Peg grammar error"
  parseOper (Kw "|") = ClassUnion
  parseOper (Kw "-") = ClassMinus
  parseOper _ = error "internal Peg grammar error"

parseClassTerm :: Texpr -> CharClass
parseClassTerm t = case t of
  Combo l "class-var" [Atom _ name] -> ClassVar l name
  Combo l "class-char" [c] -> ClassChar l (parseChar c)
  Combo l "class-range" [lo, hi] -> ClassRange l (parseChar lo) (parseChar hi)
  Combo l "class-set" elems -> ClassSet l (concatMap parseStr elems)
  _ -> error "internal Peg grammar error"

------ Utility Parsers ------

parseChar :: Texpr -> Char
parseChar (Atom _ [c]) = c
parseChar (Combo _ "char-escape" [Atom _ ['\\',c]]) = case c of
  '0' -> '\NUL'
  'a' -> '\a'
  'b' -> '\b'
  'e' -> '\ESC'
  'f' -> '\f'
  'n' -> '\n'
  'r' -> '\r'
  't' -> '\t'
  'v' -> '\v'
  _ -> error "internal Peg grammar error"
parseChar (Combo _ "char-escape" [Atom _ kw, Atom _ str]) = case kw of
  "\\x" -> chr $ read ("0x" ++ str)
  "\\u" -> chr $ read ("0x" ++ str)
  "\\U" -> chr $ read ("0x" ++ str)
  "\\" -> head str
  _ -> error "internal Peg grammar error"
parseChar t = error $ "internal Peg grammar error: parseChar " ++ show t

parseStr :: Texpr -> String
parseStr (Atom _ str) = str
parseStr t@(Combo _ "char-escape" _) = [parseChar t]
parseStr _ = error "internal Peg grammar error"
